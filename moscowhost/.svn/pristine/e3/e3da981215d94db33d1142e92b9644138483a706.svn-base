[19.02.2015 18:21:27] utf-8
[19.02.2015 18:21:54] utf-8
[19.02.2015 18:32:46] utf-8
[19.02.2015 18:32:50] utf-8
[20.02.2015 11:06:32] utf-8
[20.02.2015 11:26:36] utf-8
[20.02.2015 11:26:40] utf-8
[21.02.2015 21:00:12] utf-8
[21.02.2015 21:00:28] utf-8
[21.02.2015 21:01:16] utf-8
[21.02.2015 21:02:42] utf-8
[21.02.2015 21:03:40] utf-8
[21.02.2015 21:03:59] utf-8
[21.02.2015 21:06:25] utf-8
[21.02.2015 21:12:15] utf-8
[21.02.2015 21:12:22] utf-8
[21.02.2015 22:16:02] dop_uslugi_in_act
[21.02.2015 22:16:02] cost_nds
[21.02.2015 22:16:02] 11000.00
[21.02.2015 22:16:02] 11000.00
[21.02.2015 22:16:02] 11000.00
[21.02.2015 22:16:16] dop_uslugi_in_act
[21.02.2015 22:16:16] cost_nds
[21.02.2015 22:16:16] 11000.00
[21.02.2015 22:16:16] 11000.00
[21.02.2015 22:16:16] 11000.00
[23.02.2015 10:44:28] utf-8
[23.02.2015 10:44:31] utf-8
[23.02.2015 10:46:15] utf-8
[23.02.2015 10:46:18] utf-8
[23.02.2015 10:47:11] utf-8
[23.02.2015 10:47:14] utf-8
[23.02.2015 10:48:30] utf-8
[23.02.2015 10:48:33] utf-8
[23.02.2015 10:54:05] utf-8
[23.02.2015 10:54:09] utf-8
[23.02.2015 10:57:04] utf-8
[23.02.2015 10:57:07] utf-8
[23.02.2015 11:00:39] utf-8
[23.02.2015 11:00:41] utf-8
[23.02.2015 11:02:25] utf-8
[23.02.2015 11:02:28] utf-8
[23.02.2015 11:03:36] utf-8
[23.02.2015 11:03:41] utf-8
[23.02.2015 11:06:19] utf-8
[23.02.2015 11:06:24] utf-8
[23.02.2015 11:07:05] utf-8
[23.02.2015 11:07:08] utf-8
[23.02.2015 11:08:49] utf-8
[23.02.2015 11:08:52] utf-8
[23.02.2015 11:13:15] utf-8
[23.02.2015 11:13:18] utf-8
[23.02.2015 11:13:44] utf-8
[23.02.2015 11:13:47] utf-8
[23.02.2015 11:15:03] utf-8
[23.02.2015 11:15:06] utf-8
[23.02.2015 11:17:21] utf-8
[23.02.2015 11:17:24] utf-8
[23.02.2015 11:37:54] utf-8
[23.02.2015 11:37:57] utf-8
[23.02.2015 11:38:38] utf-8
[23.02.2015 11:38:40] utf-8
[23.02.2015 12:37:22] dop_uslugi_in_act
[23.02.2015 12:37:22] cost_nds
[23.02.2015 12:37:22] exception when saving log...
[23.02.2015 12:37:22] exception when saving log...
[23.02.2015 12:37:22] exception when saving log...
[23.02.2015 12:37:39] dop_uslugi_in_act
[23.02.2015 12:37:39] cost_nds
[23.02.2015 12:37:39] exception when saving log...
[23.02.2015 12:37:39] exception when saving log...
[23.02.2015 12:37:39] exception when saving log...
[23.02.2015 12:45:28] utf-8
[23.02.2015 12:45:31] utf-8
[23.02.2015 12:45:57] dop_uslugi_in_act
[23.02.2015 12:45:57] cost_nds
[23.02.2015 12:45:57] exception when saving log...
[23.02.2015 12:45:57] exception when saving log...
[23.02.2015 12:45:57] exception when saving log...
[23.02.2015 12:46:11] dop_uslugi_in_act
[23.02.2015 12:46:11] cost_nds
[23.02.2015 12:46:11] exception when saving log...
[23.02.2015 12:46:11] exception when saving log...
[23.02.2015 12:46:11] exception when saving log...
[23.02.2015 13:25:51] utf-8
[23.02.2015 13:25:58] utf-8
[23.02.2015 13:29:46] dop_uslugi_in_act
[23.02.2015 13:29:46] cost_nds
[23.02.2015 13:29:46] exception when saving log...
[23.02.2015 13:29:46] exception when saving log...
[23.02.2015 13:29:46] exception when saving log...
[23.02.2015 13:30:13] dop_uslugi_in_act
[23.02.2015 13:30:13] cost_nds
[23.02.2015 13:30:13] exception when saving log...
[23.02.2015 13:30:13] exception when saving log...
[23.02.2015 13:30:13] exception when saving log...
[23.02.2015 13:36:51] utf-8
[23.02.2015 13:42:41] utf-8
[23.02.2015 13:43:18] utf-8
[23.02.2015 13:44:01] utf-8
[23.02.2015 13:45:29] utf-8
[23.02.2015 13:47:03] utf-8
[23.02.2015 13:49:54] utf-8
[23.02.2015 13:52:03] utf-8
[23.02.2015 14:38:44] utf-8
[23.02.2015 14:39:19] utf-8
[23.02.2015 14:43:39] e=invalid literal for int() with base 10: ','
[23.02.2015 14:43:39] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 14:44:04] utf-8
[23.02.2015 14:58:21] e='software_list'
[23.02.2015 14:58:21] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 14:59:20] utf-8
[23.02.2015 15:00:35] utf-8
[23.02.2015 15:02:13] e='software_list'
[23.02.2015 15:02:13] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 15:02:56] e='software_list'
[23.02.2015 15:02:56] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 15:04:01] e='software_list'
[23.02.2015 15:04:01] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 15:04:41] utf-8
[23.02.2015 15:05:16] e='software_list'
[23.02.2015 15:05:16] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 15:06:13] utf-8
[23.02.2015 15:06:57] e='software_list'
[23.02.2015 15:06:57] Exception in priority_of_services: file:varset.py line:728
[23.02.2015 15:07:26] utf-8
[23.02.2015 15:08:33] utf-8
[23.02.2015 15:08:44] utf-8
[23.02.2015 15:09:08] utf-8
[23.02.2015 15:09:12] utf-8
[23.02.2015 15:11:59] utf-8
[23.02.2015 15:12:42] utf-8
[23.02.2015 15:13:30] utf-8
[23.02.2015 15:14:04] utf-8
[23.02.2015 15:17:55] utf-8
[23.02.2015 15:17:55] e=global name 'Software' is not defined
[23.02.2015 15:17:55] Exception in priority_of_services: file:varset.py line:734
[23.02.2015 15:19:01] e='int' object is not iterable
[23.02.2015 15:19:01] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:20:10] utf-8
[23.02.2015 15:20:32] e='int' object is not iterable
[23.02.2015 15:20:32] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:21:47] e='int' object is not iterable
[23.02.2015 15:21:47] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:23:00] e='int' object is not iterable
[23.02.2015 15:23:00] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:23:34] e='int' object is not iterable
[23.02.2015 15:23:34] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:24:20] e='int' object is not iterable
[23.02.2015 15:24:20] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:25:07] utf-8
[23.02.2015 15:26:21] e='int' object is not iterable
[23.02.2015 15:26:21] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:26:54] utf-8
[23.02.2015 15:27:45] utf-8
[23.02.2015 15:28:11] e='int' object is not iterable
[23.02.2015 15:28:11] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:28:55] e='int' object is not iterable
[23.02.2015 15:28:55] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:34:24] e='int' object is not iterable
[23.02.2015 15:34:24] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:35:27] utf-8
[23.02.2015 15:36:46] e='int' object is not iterable
[23.02.2015 15:36:46] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:37:40] e='int' object is not iterable
[23.02.2015 15:37:40] Exception in priority_of_services: file:varset.py line:729
[23.02.2015 15:38:52] Exception 1 in findocs.views.findocs_application_sign: 'FinDocSignApplication matching query does not exist.'
[23.02.2015 15:39:49] utf-8
[23.02.2015 15:40:26] utf-8
[23.02.2015 15:41:34] utf-8
[23.02.2015 15:42:09] utf-8
[23.02.2015 15:43:34] utf-8
[23.02.2015 15:44:06] utf-8
[23.02.2015 15:44:53] utf-8
[23.02.2015 15:45:50] utf-8
[23.02.2015 16:05:14] utf-8
[23.02.2015 16:05:14] e=local variable 'soft_list' referenced before assignment
[23.02.2015 16:05:14] Exception in priority_of_services: file:varset.py line:770
[23.02.2015 16:06:03] utf-8
[23.02.2015 16:06:03] e=local variable 'soft_list' referenced before assignment
[23.02.2015 16:06:03] Exception in priority_of_services: file:varset.py line:770
[23.02.2015 16:06:44] utf-8
[23.02.2015 16:06:59] utf-8
[23.02.2015 16:10:35] Exception 1 in findocs.views.findocs_application_sign: 'FinDocSignApplication matching query does not exist.'
[23.02.2015 16:10:57] utf-8
[23.02.2015 16:11:01] utf-8
[23.02.2015 17:15:02] dop_uslugi_in_act
[23.02.2015 17:15:02] cost_nds
[23.02.2015 17:15:02] exception when saving log...
[23.02.2015 17:15:02] exception when saving log...
[23.02.2015 17:15:02] exception when saving log...
[23.02.2015 17:17:27] dop_uslugi_in_act
[23.02.2015 17:17:27] cost_nds
[23.02.2015 17:17:27] exception when saving log...
[23.02.2015 17:17:27] exception when saving log...
[23.02.2015 17:17:27] exception when saving log...
[23.02.2015 17:18:30] dop_uslugi_in_act
[23.02.2015 17:18:30] cost_nds
[23.02.2015 17:18:30] exception when saving log...
[23.02.2015 17:18:30] exception when saving log...
[23.02.2015 17:18:30] exception when saving log...
[23.02.2015 17:18:42] dop_uslugi_in_act
[23.02.2015 17:18:42] cost_nds
[23.02.2015 17:18:42] exception when saving log...
[23.02.2015 17:18:42] exception when saving log...
[23.02.2015 17:18:42] exception when saving log...
[23.02.2015 17:18:51] dop_uslugi_in_act
[23.02.2015 17:18:51] cost_nds
[23.02.2015 17:18:51] exception when saving log...
[23.02.2015 17:18:51] exception when saving log...
[23.02.2015 17:18:51] exception when saving log...
[23.02.2015 17:19:43] dop_uslugi_in_act
[23.02.2015 17:19:43] cost_nds
[23.02.2015 17:19:43] exception when saving log...
[23.02.2015 17:19:43] exception when saving log...
[23.02.2015 17:19:43] exception when saving log...
[23.02.2015 17:23:19] dop_uslugi_in_act
[23.02.2015 17:23:19] cost_nds
[23.02.2015 17:23:19] exception when saving log...
[23.02.2015 17:23:19] exception when saving log...
[23.02.2015 17:23:19] exception when saving log...
[23.02.2015 17:24:05] dop_uslugi_in_act
[23.02.2015 17:24:05] cost_nds
[23.02.2015 17:24:05] exception when saving log...
[23.02.2015 17:24:05] exception when saving log...
[23.02.2015 17:24:05] exception when saving log...
[23.02.2015 17:24:08] dop_uslugi_in_act
[23.02.2015 17:24:08] cost_nds
[23.02.2015 17:24:08] exception when saving log...
[23.02.2015 17:24:08] exception when saving log...
[23.02.2015 17:24:08] exception when saving log...
[23.02.2015 17:24:15] dop_uslugi_in_act
[23.02.2015 17:24:15] cost_nds
[23.02.2015 17:24:15] exception when saving log...
[23.02.2015 17:24:15] exception when saving log...
[23.02.2015 17:24:15] exception when saving log...
[23.02.2015 17:26:02] dop_uslugi_in_act
[23.02.2015 17:26:02] cost_nds
[23.02.2015 17:26:02] exception when saving log...
[23.02.2015 17:26:02] exception when saving log...
[23.02.2015 17:26:02] exception when saving log...
[23.02.2015 17:26:17] dop_uslugi_in_act
[23.02.2015 17:26:17] cost_nds
[23.02.2015 17:26:17] exception when saving log...
[23.02.2015 17:26:17] exception when saving log...
[23.02.2015 17:26:17] exception when saving log...
[23.02.2015 17:27:16] utf-8
[23.02.2015 17:27:30] utf-8
[23.02.2015 17:28:34] dop_uslugi_in_act
[23.02.2015 17:28:34] cost_nds
[23.02.2015 17:28:34] exception when saving log...
[23.02.2015 17:28:34] exception when saving log...
[23.02.2015 17:28:34] exception when saving log...
[23.02.2015 17:32:39] dop_uslugi_in_act
[23.02.2015 17:32:39] cost_nds
[23.02.2015 17:32:39] exception when saving log...
[23.02.2015 17:32:39] exception when saving log...
[23.02.2015 17:32:39] exception when saving log...
[23.02.2015 17:32:40] dop_uslugi_in_act
[23.02.2015 17:32:40] cost_nds
[23.02.2015 17:32:40] exception when saving log...
[23.02.2015 17:32:40] exception when saving log...
[23.02.2015 17:32:40] exception when saving log...
[23.02.2015 17:32:50] dop_uslugi_in_act
[23.02.2015 17:32:50] cost_nds
[23.02.2015 17:32:50] exception when saving log...
[23.02.2015 17:32:50] exception when saving log...
[23.02.2015 17:32:50] exception when saving log...
[23.02.2015 17:32:55] dop_uslugi_in_act
[23.02.2015 17:32:55] cost_nds
[23.02.2015 17:32:55] exception when saving log...
[23.02.2015 17:32:55] exception when saving log...
[23.02.2015 17:32:55] exception when saving log...
[23.02.2015 17:33:09] dop_uslugi_in_act
[23.02.2015 17:33:09] cost_nds
[23.02.2015 17:33:38] dop_uslugi_in_act
[23.02.2015 17:33:38] cost_nds
[23.02.2015 17:34:23] dop_uslugi_in_act
[23.02.2015 17:34:23] cost_nds
[23.02.2015 17:34:23] exception when saving log...
[23.02.2015 17:34:23] exception when saving log...
[23.02.2015 17:34:23] exception when saving log...
[23.02.2015 17:34:26] dop_uslugi_in_act
[23.02.2015 17:34:26] cost_nds
[23.02.2015 17:34:26] exception when saving log...
[23.02.2015 17:34:26] exception when saving log...
[23.02.2015 17:34:26] exception when saving log...
[23.02.2015 17:34:36] dop_uslugi_in_act
[23.02.2015 17:34:36] cost_nds
[23.02.2015 17:34:36] exception when saving log...
[23.02.2015 17:34:36] exception when saving log...
[23.02.2015 17:34:36] exception when saving log...
[23.02.2015 17:37:22] dop_uslugi_in_act
[23.02.2015 17:37:22] cost_nds
[23.02.2015 17:37:22] exception when saving log...
[23.02.2015 17:37:22] exception when saving log...
[23.02.2015 17:37:22] exception when saving log...
[23.02.2015 17:37:26] dop_uslugi_in_act
[23.02.2015 17:37:26] cost_nds
[23.02.2015 17:37:26] exception when saving log...
[23.02.2015 17:37:26] exception when saving log...
[23.02.2015 17:37:26] exception when saving log...
[23.02.2015 17:37:33] dop_uslugi_in_act
[23.02.2015 17:37:33] cost_nds
[23.02.2015 17:37:33] exception when saving log...
[23.02.2015 17:37:33] exception when saving log...
[23.02.2015 17:37:33] exception when saving log...
[23.02.2015 17:44:50] cost_nds
[23.02.2015 17:44:50] exception when saving log...
[23.02.2015 17:44:50] exception when saving log...
[23.02.2015 17:44:50] exception when saving log...
[23.02.2015 17:45:24] dop_uslugi_in_act
[23.02.2015 17:45:24] cost_nds
[23.02.2015 17:45:24] exception when saving log...
[23.02.2015 17:45:24] exception when saving log...
[23.02.2015 17:45:24] exception when saving log...
[23.02.2015 17:46:19] dop_uslugi_in_act
[23.02.2015 17:46:19] cost_nds
[23.02.2015 17:46:19] exception when saving log...
[23.02.2015 17:46:19] exception when saving log...
[23.02.2015 17:46:19] exception when saving log...
[23.02.2015 17:47:55] dop_uslugi_in_act
[23.02.2015 17:47:55] cost_nds
[23.02.2015 17:47:55] exception when saving log...
[23.02.2015 17:47:56] exception when saving log...
[23.02.2015 17:47:56] exception when saving log...
[23.02.2015 17:48:03] dop_uslugi_in_act
[23.02.2015 17:48:03] cost_nds
[23.02.2015 17:48:03] exception when saving log...
[23.02.2015 17:48:03] exception when saving log...
[23.02.2015 17:48:03] exception when saving log...
[23.02.2015 17:48:09] dop_uslugi_in_act
[23.02.2015 17:48:09] cost_nds
[23.02.2015 17:48:09] exception when saving log...
[23.02.2015 17:48:09] exception when saving log...
[23.02.2015 17:48:09] exception when saving log...
[23.02.2015 17:51:47] dop_uslugi_in_act
[23.02.2015 17:51:47] cost_nds
[23.02.2015 17:51:47] exception when saving log...
[23.02.2015 17:51:47] exception when saving log...
[23.02.2015 17:51:47] exception when saving log...
[23.02.2015 17:51:49] dop_uslugi_in_act
[23.02.2015 17:51:49] cost_nds
[23.02.2015 17:51:49] exception when saving log...
[23.02.2015 17:51:49] exception when saving log...
[23.02.2015 17:51:49] exception when saving log...
[23.02.2015 17:51:57] dop_uslugi_in_act
[23.02.2015 17:51:57] cost_nds
[23.02.2015 17:51:57] exception when saving log...
[23.02.2015 17:51:57] exception when saving log...
[23.02.2015 17:51:57] exception when saving log...
[23.02.2015 17:52:14] dop_uslugi_in_act
[23.02.2015 17:52:14] cost_nds
[23.02.2015 17:52:14] exception when saving log...
[23.02.2015 17:52:14] exception when saving log...
[23.02.2015 17:52:14] exception when saving log...
[23.02.2015 17:52:16] dop_uslugi_in_act
[23.02.2015 17:52:16] cost_nds
[23.02.2015 17:52:16] exception when saving log...
[23.02.2015 17:52:16] exception when saving log...
[23.02.2015 17:52:16] exception when saving log...
[23.02.2015 17:52:22] dop_uslugi_in_act
[23.02.2015 17:52:22] cost_nds
[23.02.2015 17:52:22] exception when saving log...
[23.02.2015 17:52:22] exception when saving log...
[23.02.2015 17:52:22] exception when saving log...
[23.02.2015 17:55:18] dop_uslugi_in_act
[23.02.2015 17:55:18] cost_nds
[23.02.2015 17:55:18] exception when saving log...
[23.02.2015 17:55:18] exception when saving log...
[23.02.2015 17:55:18] exception when saving log...
[23.02.2015 17:55:21] dop_uslugi_in_act
[23.02.2015 17:55:21] cost_nds
[23.02.2015 17:55:21] exception when saving log...
[23.02.2015 17:55:21] exception when saving log...
[23.02.2015 17:55:21] exception when saving log...
[23.02.2015 17:55:28] dop_uslugi_in_act
[23.02.2015 17:55:28] cost_nds
[23.02.2015 17:55:28] exception when saving log...
[23.02.2015 17:55:29] exception when saving log...
[23.02.2015 17:55:29] exception when saving log...
[23.02.2015 18:10:42] cost_nds
[23.02.2015 18:10:42] exception when saving log...
[23.02.2015 18:10:42] exception when saving log...
[23.02.2015 18:10:42] exception when saving log...
[23.02.2015 18:24:16] cost_nds
[23.02.2015 18:24:16] exception when saving log...
[23.02.2015 18:24:16] exception when saving log...
[23.02.2015 18:24:16] exception when saving log...
[23.02.2015 18:24:29] cost_nds
[23.02.2015 18:24:29] exception when saving log...
[23.02.2015 18:24:29] exception when saving log...
[23.02.2015 18:24:29] exception when saving log...
[23.02.2015 18:24:32] cost_nds
[23.02.2015 18:24:32] exception when saving log...
[23.02.2015 18:24:32] exception when saving log...
[23.02.2015 18:24:32] exception when saving log...
[23.02.2015 18:29:16] utf-8
[23.02.2015 18:29:26] utf-8
[23.02.2015 18:30:16] dop_uslugi_in_act
[23.02.2015 18:30:16] cost_nds
[23.02.2015 18:30:16] exception when saving log...
[23.02.2015 18:30:16] exception when saving log...
[23.02.2015 18:30:16] exception when saving log...
[23.02.2015 18:30:22] dop_uslugi_in_act
[23.02.2015 18:30:22] cost_nds
[23.02.2015 18:30:22] exception when saving log...
[23.02.2015 18:30:22] exception when saving log...
[23.02.2015 18:30:22] exception when saving log...
[23.02.2015 18:30:36] dop_uslugi_in_act
[23.02.2015 18:30:36] cost_nds
[23.02.2015 18:30:36] exception when saving log...
[23.02.2015 18:30:36] exception when saving log...
[23.02.2015 18:30:36] exception when saving log...
[23.02.2015 18:30:44] dop_uslugi_in_act
[23.02.2015 18:30:44] cost_nds
[23.02.2015 18:30:44] exception when saving log...
[23.02.2015 18:30:44] exception when saving log...
[23.02.2015 18:30:44] exception when saving log...
[23.02.2015 18:34:31] utf-8
[23.02.2015 18:34:41] utf-8
[23.02.2015 18:41:03] dop_uslugi_in_act
[23.02.2015 18:41:03] cost_nds
[23.02.2015 18:41:03] exception when saving log...
[23.02.2015 18:41:03] exception when saving log...
[23.02.2015 18:41:03] exception when saving log...
[23.02.2015 18:41:08] dop_uslugi_in_act
[23.02.2015 18:41:08] cost_nds
[23.02.2015 18:41:08] exception when saving log...
[23.02.2015 18:41:08] exception when saving log...
[23.02.2015 18:41:08] exception when saving log...
[23.02.2015 18:42:00] utf-8
[23.02.2015 18:42:47] utf-8
[23.02.2015 18:43:51] dop_uslugi_in_act
[23.02.2015 18:43:51] cost_nds
[23.02.2015 18:43:51] exception when saving log...
[23.02.2015 18:43:51] exception when saving log...
[23.02.2015 18:43:51] exception when saving log...
[23.02.2015 18:44:02] dop_uslugi_in_act
[23.02.2015 18:44:02] cost_nds
[23.02.2015 18:44:02] exception when saving log...
[23.02.2015 18:44:02] exception when saving log...
[23.02.2015 18:44:02] exception when saving log...
[23.02.2015 18:44:09] dop_uslugi_in_act
[23.02.2015 18:44:09] cost_nds
[23.02.2015 18:44:09] exception when saving log...
[23.02.2015 18:44:09] exception when saving log...
[23.02.2015 18:44:09] exception when saving log...
[23.02.2015 18:45:38] dop_uslugi_in_act
[23.02.2015 18:45:38] cost_nds
[23.02.2015 18:45:38] exception when saving log...
[23.02.2015 18:45:38] exception when saving log...
[23.02.2015 18:45:38] exception when saving log...
[23.02.2015 18:50:15] dop_uslugi_in_act
[23.02.2015 18:50:15] cost_nds
[23.02.2015 18:50:15] exception when saving log...
[23.02.2015 18:50:15] exception when saving log...
[23.02.2015 18:50:15] exception when saving log...
[23.02.2015 18:50:55] dop_uslugi_in_act
[23.02.2015 18:50:55] cost_nds
[23.02.2015 18:50:55] exception when saving log...
[23.02.2015 18:50:55] exception when saving log...
[23.02.2015 18:50:55] exception when saving log...
[23.02.2015 18:51:01] dop_uslugi_in_act
[23.02.2015 18:51:01] cost_nds
[23.02.2015 18:51:01] exception when saving log...
[23.02.2015 18:51:01] exception when saving log...
[23.02.2015 18:51:01] exception when saving log...
[23.02.2015 18:51:40] dop_uslugi_in_act
[23.02.2015 18:51:40] cost_nds
[23.02.2015 18:51:40] exception when saving log...
[23.02.2015 18:51:40] exception when saving log...
[23.02.2015 18:51:40] exception when saving log...
[23.02.2015 18:51:46] dop_uslugi_in_act
[23.02.2015 18:51:46] cost_nds
[23.02.2015 18:51:46] exception when saving log...
[23.02.2015 18:51:46] exception when saving log...
[23.02.2015 18:51:46] exception when saving log...
[23.02.2015 18:52:45] dop_uslugi_in_act
[23.02.2015 18:52:45] cost_nds
[23.02.2015 18:52:45] exception when saving log...
[23.02.2015 18:52:45] exception when saving log...
[23.02.2015 18:52:45] exception when saving log...
[23.02.2015 19:04:44] dop_uslugi_in_act
[23.02.2015 19:04:44] cost_nds
[23.02.2015 19:04:44] exception when saving log...
[23.02.2015 19:04:44] exception when saving log...
[23.02.2015 19:04:45] exception when saving log...
[23.02.2015 19:04:53] dop_uslugi_in_act
[23.02.2015 19:04:53] cost_nds
[23.02.2015 19:04:53] exception when saving log...
[23.02.2015 19:04:53] exception when saving log...
[23.02.2015 19:04:53] exception when saving log...
[23.02.2015 19:18:20] dop_uslugi_in_act
[23.02.2015 19:18:20] cost_nds
[23.02.2015 19:18:21] exception when saving log...
[23.02.2015 19:18:21] exception when saving log...
[23.02.2015 19:18:21] exception when saving log...
[23.02.2015 19:18:29] dop_uslugi_in_act
[23.02.2015 19:18:29] cost_nds
[23.02.2015 19:18:29] exception when saving log...
[23.02.2015 19:18:29] exception when saving log...
[23.02.2015 19:18:29] exception when saving log...
[23.02.2015 19:18:55] dop_uslugi_in_act
[23.02.2015 19:18:55] cost_nds
[23.02.2015 19:18:56] exception when saving log...
[23.02.2015 19:18:56] exception when saving log...
[23.02.2015 19:18:56] exception when saving log...
[23.02.2015 19:18:58] dop_uslugi_in_act
[23.02.2015 19:18:58] cost_nds
[23.02.2015 19:18:58] exception when saving log...
[23.02.2015 19:18:58] exception when saving log...
[23.02.2015 19:18:58] exception when saving log...
[23.02.2015 19:19:02] dop_uslugi_in_act
[23.02.2015 19:19:02] cost_nds
[23.02.2015 19:19:02] exception when saving log...
[23.02.2015 19:19:02] exception when saving log...
[23.02.2015 19:19:02] exception when saving log...
[23.02.2015 19:19:50] dop_uslugi_in_act
[23.02.2015 19:19:50] cost_nds
[23.02.2015 19:19:50] exception when saving log...
[23.02.2015 19:19:50] exception when saving log...
[23.02.2015 19:19:50] exception when saving log...
[23.02.2015 19:19:54] dop_uslugi_in_act
[23.02.2015 19:19:54] cost_nds
[23.02.2015 19:19:54] exception when saving log...
[23.02.2015 19:19:54] exception when saving log...
[23.02.2015 19:19:54] exception when saving log...
[23.02.2015 19:20:05] dop_uslugi_in_act
[23.02.2015 19:20:05] cost_nds
[23.02.2015 19:20:05] exception when saving log...
[23.02.2015 19:20:05] exception when saving log...
[23.02.2015 19:20:05] exception when saving log...
[23.02.2015 19:20:43] dop_uslugi_in_act
[23.02.2015 19:20:43] cost_nds
[23.02.2015 19:20:43] exception when saving log...
[23.02.2015 19:20:43] exception when saving log...
[23.02.2015 19:20:43] exception when saving log...
[23.02.2015 19:20:45] dop_uslugi_in_act
[23.02.2015 19:20:45] cost_nds
[23.02.2015 19:20:45] exception when saving log...
[23.02.2015 19:20:45] exception when saving log...
[23.02.2015 19:20:45] exception when saving log...
[23.02.2015 19:21:03] dop_uslugi_in_act
[23.02.2015 19:21:03] cost_nds
[23.02.2015 19:21:03] exception when saving log...
[23.02.2015 19:21:03] exception when saving log...
[23.02.2015 19:21:03] exception when saving log...
[23.02.2015 19:21:49] dop_uslugi_in_act
[23.02.2015 19:21:49] cost_nds
[23.02.2015 19:21:49] exception when saving log...
[23.02.2015 19:21:49] exception when saving log...
[23.02.2015 19:21:49] exception when saving log...
[23.02.2015 19:21:52] dop_uslugi_in_act
[23.02.2015 19:21:52] cost_nds
[23.02.2015 19:21:52] exception when saving log...
[23.02.2015 19:21:52] exception when saving log...
[23.02.2015 19:21:52] exception when saving log...
[23.02.2015 19:21:59] dop_uslugi_in_act
[23.02.2015 19:21:59] cost_nds
[23.02.2015 19:21:59] exception when saving log...
[23.02.2015 19:21:59] exception when saving log...
[23.02.2015 19:21:59] exception when saving log...
[23.02.2015 19:22:48] dop_uslugi_in_act
[23.02.2015 19:22:48] cost_nds
[23.02.2015 19:22:48] exception when saving log...
[23.02.2015 19:22:48] exception when saving log...
[23.02.2015 19:22:48] exception when saving log...
[23.02.2015 19:22:54] dop_uslugi_in_act
[23.02.2015 19:22:54] cost_nds
[23.02.2015 19:22:54] exception when saving log...
[23.02.2015 19:22:54] exception when saving log...
[23.02.2015 19:22:54] exception when saving log...
[23.02.2015 19:23:00] dop_uslugi_in_act
[23.02.2015 19:23:00] cost_nds
[23.02.2015 19:23:00] exception when saving log...
[23.02.2015 19:23:00] exception when saving log...
[23.02.2015 19:23:00] exception when saving log...
[23.02.2015 19:24:16] dop_uslugi_in_act
[23.02.2015 19:24:16] cost_nds
[23.02.2015 19:24:16] exception when saving log...
[23.02.2015 19:24:16] exception when saving log...
[23.02.2015 19:24:16] exception when saving log...
[23.02.2015 19:24:18] dop_uslugi_in_act
[23.02.2015 19:24:18] cost_nds
[23.02.2015 19:24:18] exception when saving log...
[23.02.2015 19:24:18] exception when saving log...
[23.02.2015 19:24:18] exception when saving log...
[23.02.2015 19:24:28] dop_uslugi_in_act
[23.02.2015 19:24:28] cost_nds
[23.02.2015 19:24:28] exception when saving log...
[23.02.2015 19:24:28] exception when saving log...
[23.02.2015 19:24:28] exception when saving log...
[23.02.2015 19:25:19] dop_uslugi_in_act
[23.02.2015 19:25:20] cost_nds
[23.02.2015 19:25:20] 2300.00
[23.02.2015 19:25:20] exception when saving log...
[23.02.2015 19:25:20] exception when saving log...
[23.02.2015 19:29:00] dop_uslugi_in_act
[23.02.2015 19:29:00] cost_nds
[23.02.2015 19:29:00] 2300.00
[23.02.2015 19:29:00] 2300.00
[23.02.2015 19:29:00] exception when saving log...
[23.02.2015 19:30:51] dop_uslugi_in_act
[23.02.2015 19:30:51] cost_nds
[23.02.2015 19:30:51] 2300.00
[23.02.2015 19:30:51] 2300.00
[23.02.2015 19:30:51] exception when saving log...
[23.02.2015 19:31:02] dop_uslugi_in_act
[23.02.2015 19:31:02] cost_nds
[23.02.2015 19:31:02] 2300.00
[23.02.2015 19:31:02] 2300.00
[23.02.2015 19:31:02] exception when saving log...
[23.02.2015 19:31:05] dop_uslugi_in_act
[23.02.2015 19:31:05] cost_nds
[23.02.2015 19:31:05] 2300.00
[23.02.2015 19:31:05] 2300.00
[23.02.2015 19:31:05] exception when saving log...
[23.02.2015 19:31:10] dop_uslugi_in_act
[23.02.2015 19:31:10] cost_nds
[23.02.2015 19:31:10] 2300.00
[23.02.2015 19:31:10] 2300.00
[23.02.2015 19:31:11] exception when saving log...
[23.02.2015 19:32:01] dop_uslugi_in_act
[23.02.2015 19:32:01] cost_nds
[23.02.2015 19:32:01] 2300.00
[23.02.2015 19:32:01] 2300.00
[23.02.2015 19:32:01] 2300.00
[24.02.2015 09:50:56] dop_uslugi_in_act
[24.02.2015 09:50:56] cost_nds
[24.02.2015 09:50:56] 2300.00
[24.02.2015 09:50:56] 2300.00
[24.02.2015 09:50:56] 2300.00
[24.02.2015 09:51:00] dop_uslugi_in_act
[24.02.2015 09:51:00] cost_nds
[24.02.2015 09:51:00] 2300.00
[24.02.2015 09:51:00] 2300.00
[24.02.2015 09:51:00] 2300.00
[24.02.2015 17:14:25] utf-8
[24.02.2015 17:14:35] utf-8
[24.02.2015 17:29:54] utf-8
[24.02.2015 17:30:01] utf-8
[25.02.2015 12:45:30] utf-8
[25.02.2015 12:45:38] utf-8
[25.02.2015 12:46:25] utf-8
[25.02.2015 12:46:33] utf-8
[26.02.2015 13:34:25] utf-8
[26.02.2015 13:34:32] utf-8
[26.02.2015 15:04:20] Exception 1 in findocs.views.findocs_application_sign: 'FinDocSignApplication matching query does not exist.'
[26.02.2015 15:04:24] Exception 1 in findocs.views.findocs_application_sign: 'FinDocSignApplication matching query does not exist.'
[26.02.2015 15:04:52] utf-8
[26.02.2015 15:04:57] utf-8
[26.02.2015 15:05:42] utf-8
[26.02.2015 15:05:46] utf-8
[26.02.2015 15:09:18] dop_uslugi_in_act
[26.02.2015 15:09:18] cost_nds
[26.02.2015 15:09:18] 2700.00
[26.02.2015 15:09:18] 2700.00
[26.02.2015 15:09:18] 2700.00
[26.02.2015 15:09:30] dop_uslugi_in_act
[26.02.2015 15:09:30] cost_nds
[26.02.2015 15:09:30] 2700.00
[26.02.2015 15:09:30] 2700.00
[26.02.2015 15:09:30] 2700.00
[02.03.2015 17:47:10] utf-8
[02.03.2015 17:47:15] utf-8
[03.03.2015 12:15:57] utf-8
[03.03.2015 12:16:05] utf-8
[03.03.2015 12:24:53] utf-8
[03.03.2015 12:25:05] utf-8
[03.03.2015 12:35:25] utf-8
[03.03.2015 12:35:32] utf-8
[03.03.2015 12:41:25] utf-8
[03.03.2015 12:41:29] utf-8
[03.03.2015 12:47:20] utf-8
[03.03.2015 12:47:25] utf-8
[03.03.2015 12:49:24] utf-8
[03.03.2015 12:49:31] utf-8
[03.03.2015 12:53:17] utf-8
[03.03.2015 12:53:20] utf-8
[03.03.2015 12:54:55] utf-8
[03.03.2015 12:54:58] utf-8
[03.03.2015 13:04:54] utf-8
[03.03.2015 13:04:58] utf-8
[03.03.2015 13:10:56] utf-8
[03.03.2015 13:10:58] utf-8
[03.03.2015 13:15:34] utf-8
[03.03.2015 13:15:37] utf-8
[03.03.2015 13:18:24] utf-8
[03.03.2015 13:18:27] utf-8
[03.03.2015 13:36:58] utf-8
[03.03.2015 13:37:01] utf-8
[03.03.2015 13:39:17] utf-8
[03.03.2015 13:39:20] utf-8
[03.03.2015 13:41:42] utf-8
[03.03.2015 13:41:46] utf-8
[03.03.2015 14:48:25] utf-8
[03.03.2015 14:48:28] utf-8
[03.03.2015 15:42:15] utf-8
[03.03.2015 15:42:20] utf-8
[03.03.2015 15:45:50] utf-8
[03.03.2015 15:45:55] utf-8
[03.03.2015 15:50:30] utf-8
[03.03.2015 15:50:34] utf-8
[03.03.2015 15:59:39] utf-8
[03.03.2015 15:59:42] utf-8
[03.03.2015 16:00:07] Exception in create_check: ''Zakazy' object has no attribute 'delivery''
[03.03.2015 16:00:07] Exception in create_check: file:models.py line:511
[03.03.2015 16:00:07] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:00:07] Exception in send_mail: file:views.py line:211
[03.03.2015 16:12:21] utf-8
[03.03.2015 16:12:24] utf-8
[03.03.2015 16:12:40] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:12:40] Exception in create_check: file:models.py line:587
[03.03.2015 16:12:40] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:12:40] Exception in send_mail: file:views.py line:211
[03.03.2015 16:17:18] utf-8
[03.03.2015 16:17:22] utf-8
[03.03.2015 16:17:44] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:17:44] Exception in create_check: file:models.py line:587
[03.03.2015 16:17:45] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:17:45] Exception in send_mail: file:views.py line:211
[03.03.2015 16:21:41] utf-8
[03.03.2015 16:21:44] utf-8
[03.03.2015 16:22:01] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:22:01] Exception in create_check: file:models.py line:587
[03.03.2015 16:22:02] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:22:02] Exception in send_mail: file:views.py line:211
[03.03.2015 16:27:36] utf-8
[03.03.2015 16:27:39] utf-8
[03.03.2015 16:28:16] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:28:16] Exception in create_check: file:models.py line:587
[03.03.2015 16:28:17] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:28:17] Exception in send_mail: file:views.py line:211
[03.03.2015 16:28:17] ***********************************************************************************************************
[03.03.2015 16:28:17] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 16:31:06] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:31:06] Exception in create_check: file:models.py line:587
[03.03.2015 16:31:06] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:31:06] Exception in send_mail: file:views.py line:211
[03.03.2015 16:31:06] ***********************************************************************************************************
[03.03.2015 16:31:06] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 16:54:26] utf-8
[03.03.2015 16:54:29] utf-8
[03.03.2015 16:54:39] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:54:39] Exception in create_check: file:models.py line:587
[03.03.2015 16:54:40] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:54:40] Exception in send_mail: file:views.py line:211
[03.03.2015 16:54:40] ***********************************************************************************************************
[03.03.2015 16:54:40] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 16:54:40] --------------------- start operation with zakaz = 238 --------------
[03.03.2015 16:54:40] 4
[03.03.2015 16:54:40] 5
[03.03.2015 16:54:40] 7
[03.03.2015 16:54:40] 8
[03.03.2015 16:54:40] 11
[03.03.2015 16:54:40] 12
[03.03.2015 16:54:40] 13
[03.03.2015 16:54:40] ballance = 0.00, cost=2318.13
[03.03.2015 16:54:40] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 16:56:21] utf-8
[03.03.2015 16:56:24] utf-8
[03.03.2015 16:56:34] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:56:34] Exception in create_check: file:models.py line:587
[03.03.2015 16:56:35] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:56:35] Exception in send_mail: file:views.py line:211
[03.03.2015 16:56:35] ***********************************************************************************************************
[03.03.2015 16:56:35] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 16:56:35] --------------------- start operation with zakaz = 243 --------------
[03.03.2015 16:56:35] 4
[03.03.2015 16:56:35] 5
[03.03.2015 16:56:35] 7
[03.03.2015 16:56:35] 8
[03.03.2015 16:56:35] 11
[03.03.2015 16:56:35] 12
[03.03.2015 16:56:35] 13
[03.03.2015 16:56:35] ballance = 0.00, cost=2318.13
[03.03.2015 16:56:35] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 16:56:35] there is not enough money at the bill_account = 11
[03.03.2015 16:56:35] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 16:56:35] ***********************************************************************************************************
[03.03.2015 16:57:11] utf-8
[03.03.2015 16:57:14] utf-8
[03.03.2015 16:57:28] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 16:57:28] Exception in create_check: file:models.py line:587
[03.03.2015 16:57:28] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 16:57:28] Exception in send_mail: file:views.py line:211
[03.03.2015 16:57:28] ***********************************************************************************************************
[03.03.2015 16:57:28] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 16:57:28] --------------------- start operation with zakaz = 248 --------------
[03.03.2015 16:57:28] 4
[03.03.2015 16:57:28] 5
[03.03.2015 16:57:28] 7
[03.03.2015 16:57:28] 8
[03.03.2015 16:57:28] 11
[03.03.2015 16:57:28] 12
[03.03.2015 16:57:28] 13
[03.03.2015 16:57:28] ballance = 0.00, cost=2318.13
[03.03.2015 16:57:28] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 16:57:28] there is not enough money at the bill_account = 11
[03.03.2015 16:57:28] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 16:57:28] ***********************************************************************************************************
[03.03.2015 17:02:33] utf-8
[03.03.2015 17:02:49] utf-8
[03.03.2015 17:03:04] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 17:03:04] Exception in create_check: file:models.py line:587
[03.03.2015 17:03:04] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 17:03:04] Exception in send_mail: file:views.py line:211
[03.03.2015 17:03:04] ***********************************************************************************************************
[03.03.2015 17:03:04] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 17:03:04] --------------------- start operation with zakaz = 253 --------------
[03.03.2015 17:03:04] 4
[03.03.2015 17:03:04] 5
[03.03.2015 17:03:04] 7
[03.03.2015 17:03:04] 8
[03.03.2015 17:03:04] 11
[03.03.2015 17:03:04] 12
[03.03.2015 17:03:04] 13
[03.03.2015 17:03:04] ballance = 0.00, cost=2318.13
[03.03.2015 17:03:04] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 17:03:04] there is not enough money at the bill_account = 11
[03.03.2015 17:03:04] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 17:03:04] ***********************************************************************************************************
[03.03.2015 17:43:49] utf-8
[03.03.2015 17:44:03] utf-8
[03.03.2015 17:44:27] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 17:44:27] Exception in create_check: file:models.py line:587
[03.03.2015 17:44:27] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 17:44:27] Exception in send_mail: file:views.py line:211
[03.03.2015 17:44:27] ***********************************************************************************************************
[03.03.2015 17:44:27] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 17:44:27] --------------------- start operation with zakaz = 258 --------------
[03.03.2015 17:44:27] 4
[03.03.2015 17:44:27] 5
[03.03.2015 17:44:27] 7
[03.03.2015 17:44:27] 8
[03.03.2015 17:44:27] 11
[03.03.2015 17:44:27] 12
[03.03.2015 17:44:27] 13
[03.03.2015 17:44:27] ballance = 0.00, cost=2318.13
[03.03.2015 17:44:27] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 17:44:27] there is not enough money at the bill_account = 11
[03.03.2015 17:44:27] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 17:44:27] ***********************************************************************************************************
[03.03.2015 17:45:46] utf-8
[03.03.2015 17:45:57] utf-8
[03.03.2015 17:46:39] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 17:46:39] Exception in create_check: file:models.py line:587
[03.03.2015 17:46:39] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 17:46:39] Exception in send_mail: file:views.py line:211
[03.03.2015 17:46:39] ***********************************************************************************************************
[03.03.2015 17:46:39] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 17:46:39] --------------------- start operation with zakaz = 263 --------------
[03.03.2015 17:46:39] 4
[03.03.2015 17:46:39] 5
[03.03.2015 17:46:39] 7
[03.03.2015 17:46:39] 8
[03.03.2015 17:46:39] 11
[03.03.2015 17:46:39] 12
[03.03.2015 17:46:39] 13
[03.03.2015 17:46:39] ballance = 0.00, cost=2318.13
[03.03.2015 17:46:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 17:46:39] there is not enough money at the bill_account = 11
[03.03.2015 17:46:39] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 17:46:39] ***********************************************************************************************************
[03.03.2015 17:49:56] utf-8
[03.03.2015 17:50:05] utf-8
[03.03.2015 17:51:03] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[03.03.2015 17:51:03] Exception in create_check: file:models.py line:587
[03.03.2015 17:51:03] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[03.03.2015 17:51:03] Exception in send_mail: file:views.py line:211
[03.03.2015 17:51:03] ***********************************************************************************************************
[03.03.2015 17:51:03] --------------------- start operation write off of money for bill_account = 11 -------------
[03.03.2015 17:51:03] --------------------- start operation with zakaz = 268 --------------
[03.03.2015 17:51:03] 4
[03.03.2015 17:51:03] 5
[03.03.2015 17:51:03] 7
[03.03.2015 17:51:03] 8
[03.03.2015 17:51:03] 11
[03.03.2015 17:51:03] 12
[03.03.2015 17:51:03] 13
[03.03.2015 17:51:03] ballance = 0.00, cost=2538.90
[03.03.2015 17:51:03] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[03.03.2015 17:51:03] there is not enough money at the bill_account = 11
[03.03.2015 17:51:03] --------------------- end operation write off of money for bill_account = 11 -------------
[03.03.2015 17:51:03] ***********************************************************************************************************
[04.03.2015 12:08:10] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 12:08:10] ***********************************************************************************************************
[04.03.2015 12:08:10] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 12:08:10] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 12:08:10] 4
[04.03.2015 12:08:10] 5
[04.03.2015 12:08:11] 7
[04.03.2015 12:08:11] 8
[04.03.2015 12:08:11] 11
[04.03.2015 12:08:11] 12
[04.03.2015 12:08:11] 13
[04.03.2015 12:08:11] ballance = 0.00, cost=2318.13
[04.03.2015 12:08:11] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:08:11] there is not enough money at the bill_account = 11
[04.03.2015 12:08:11] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 12:08:11] 4
[04.03.2015 12:08:11] 5
[04.03.2015 12:08:11] 7
[04.03.2015 12:08:11] 8
[04.03.2015 12:08:11] 11
[04.03.2015 12:08:11] 12
[04.03.2015 12:08:11] 13
[04.03.2015 12:08:11] ballance = 0.00, cost=2318.13
[04.03.2015 12:08:11] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:08:11] there is not enough money at the bill_account = 11
[04.03.2015 12:08:11] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 12:08:11] 4
[04.03.2015 12:08:11] 5
[04.03.2015 12:08:11] 7
[04.03.2015 12:08:11] 8
[04.03.2015 12:08:11] 11
[04.03.2015 12:08:11] 12
[04.03.2015 12:08:11] 13
[04.03.2015 12:08:11] ballance = 0.00, cost=2318.13
[04.03.2015 12:08:11] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:08:11] there is not enough money at the bill_account = 11
[04.03.2015 12:08:11] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 12:08:11] 4
[04.03.2015 12:08:11] 5
[04.03.2015 12:08:11] 7
[04.03.2015 12:08:11] 8
[04.03.2015 12:08:11] 11
[04.03.2015 12:08:11] 12
[04.03.2015 12:08:11] 13
[04.03.2015 12:08:11] ballance = 0.00, cost=2538.90
[04.03.2015 12:08:11] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:08:11] there is not enough money at the bill_account = 11
[04.03.2015 12:08:11] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 12:08:11] ***********************************************************************************************************
[04.03.2015 12:08:11] ***********************************************************************************************************
[04.03.2015 12:08:11] --------------------- start operation for send message -------------
[04.03.2015 12:08:11] --------------------- end operation for send message -------------
[04.03.2015 12:08:11] ***********************************************************************************************************
[04.03.2015 12:16:39] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 12:16:39] ***********************************************************************************************************
[04.03.2015 12:16:39] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 12:16:39] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 12:16:39] 4
[04.03.2015 12:16:39] 5
[04.03.2015 12:16:39] 7
[04.03.2015 12:16:39] 8
[04.03.2015 12:16:39] 11
[04.03.2015 12:16:39] 12
[04.03.2015 12:16:39] 13
[04.03.2015 12:16:39] ballance = 1000.00, cost=2318.13
[04.03.2015 12:16:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:16:39] there is not enough money at the bill_account = 11
[04.03.2015 12:16:39] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 12:16:39] 4
[04.03.2015 12:16:39] 5
[04.03.2015 12:16:39] 7
[04.03.2015 12:16:39] 8
[04.03.2015 12:16:39] 11
[04.03.2015 12:16:39] 12
[04.03.2015 12:16:39] 13
[04.03.2015 12:16:39] ballance = 1000.00, cost=2318.13
[04.03.2015 12:16:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:16:39] there is not enough money at the bill_account = 11
[04.03.2015 12:16:39] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 12:16:39] 4
[04.03.2015 12:16:39] 5
[04.03.2015 12:16:39] 7
[04.03.2015 12:16:39] 8
[04.03.2015 12:16:39] 11
[04.03.2015 12:16:39] 12
[04.03.2015 12:16:39] 13
[04.03.2015 12:16:39] ballance = 1000.00, cost=2318.13
[04.03.2015 12:16:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:16:39] there is not enough money at the bill_account = 11
[04.03.2015 12:16:39] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 12:16:39] 4
[04.03.2015 12:16:39] 5
[04.03.2015 12:16:39] 7
[04.03.2015 12:16:39] 8
[04.03.2015 12:16:39] 11
[04.03.2015 12:16:39] 12
[04.03.2015 12:16:39] 13
[04.03.2015 12:16:39] ballance = 1000.00, cost=2538.90
[04.03.2015 12:16:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 12:16:39] there is not enough money at the bill_account = 11
[04.03.2015 12:16:39] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 12:16:39] ***********************************************************************************************************
[04.03.2015 12:16:39] ***********************************************************************************************************
[04.03.2015 12:16:39] --------------------- start operation for send message -------------
[04.03.2015 12:16:39] --------------------- end operation for send message -------------
[04.03.2015 12:16:39] ***********************************************************************************************************
[04.03.2015 13:22:31] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:22:31] ***********************************************************************************************************
[04.03.2015 13:22:31] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:22:31] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:22:31] 4
[04.03.2015 13:22:31] 5
[04.03.2015 13:22:31] 7
[04.03.2015 13:22:31] 8
[04.03.2015 13:22:31] 11
[04.03.2015 13:22:31] 12
[04.03.2015 13:22:31] 13
[04.03.2015 13:22:31] ballance = 0.00, cost=2318.13
[04.03.2015 13:22:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:22:31] there is not enough money at the bill_account = 11
[04.03.2015 13:22:31] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:22:31] 4
[04.03.2015 13:22:31] 5
[04.03.2015 13:22:31] 7
[04.03.2015 13:22:31] 8
[04.03.2015 13:22:31] 11
[04.03.2015 13:22:31] 12
[04.03.2015 13:22:31] 13
[04.03.2015 13:22:31] ballance = 0.00, cost=2318.13
[04.03.2015 13:22:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:22:31] there is not enough money at the bill_account = 11
[04.03.2015 13:22:31] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:22:31] 4
[04.03.2015 13:22:31] 5
[04.03.2015 13:22:31] 7
[04.03.2015 13:22:31] 8
[04.03.2015 13:22:31] 11
[04.03.2015 13:22:31] 12
[04.03.2015 13:22:31] 13
[04.03.2015 13:22:31] ballance = 0.00, cost=2318.13
[04.03.2015 13:22:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:22:31] there is not enough money at the bill_account = 11
[04.03.2015 13:22:31] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:22:31] 4
[04.03.2015 13:22:31] 5
[04.03.2015 13:22:31] 7
[04.03.2015 13:22:31] 8
[04.03.2015 13:22:31] 11
[04.03.2015 13:22:31] 12
[04.03.2015 13:22:31] 13
[04.03.2015 13:22:31] ballance = 0.00, cost=2538.90
[04.03.2015 13:22:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:22:31] there is not enough money at the bill_account = 11
[04.03.2015 13:22:31] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:22:31] ***********************************************************************************************************
[04.03.2015 13:22:31] ***********************************************************************************************************
[04.03.2015 13:22:31] --------------------- start operation for send message -------------
[04.03.2015 13:22:31] --------------------- end operation for send message -------------
[04.03.2015 13:22:31] ***********************************************************************************************************
[04.03.2015 13:23:25] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:23:25] ***********************************************************************************************************
[04.03.2015 13:23:25] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:23:25] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:23:25] 4
[04.03.2015 13:23:25] 5
[04.03.2015 13:23:25] 7
[04.03.2015 13:23:25] 8
[04.03.2015 13:23:25] 11
[04.03.2015 13:23:25] 12
[04.03.2015 13:23:25] 13
[04.03.2015 13:23:25] ballance = 0.00, cost=2318.13
[04.03.2015 13:23:25] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:23:25] there is not enough money at the bill_account = 11
[04.03.2015 13:23:25] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:23:25] 4
[04.03.2015 13:23:25] 5
[04.03.2015 13:23:25] 7
[04.03.2015 13:23:25] 8
[04.03.2015 13:23:25] 11
[04.03.2015 13:23:25] 12
[04.03.2015 13:23:25] 13
[04.03.2015 13:23:25] ballance = 0.00, cost=2318.13
[04.03.2015 13:23:25] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:23:25] there is not enough money at the bill_account = 11
[04.03.2015 13:23:25] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:23:25] 4
[04.03.2015 13:23:25] 5
[04.03.2015 13:23:25] 7
[04.03.2015 13:23:25] 8
[04.03.2015 13:23:25] 11
[04.03.2015 13:23:25] 12
[04.03.2015 13:23:25] 13
[04.03.2015 13:23:25] ballance = 0.00, cost=2318.13
[04.03.2015 13:23:25] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:23:25] there is not enough money at the bill_account = 11
[04.03.2015 13:23:25] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:23:25] 4
[04.03.2015 13:23:25] 5
[04.03.2015 13:23:25] 7
[04.03.2015 13:23:25] 8
[04.03.2015 13:23:25] 11
[04.03.2015 13:23:25] 12
[04.03.2015 13:23:25] 13
[04.03.2015 13:23:25] ballance = 0.00, cost=2538.90
[04.03.2015 13:23:25] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:23:25] there is not enough money at the bill_account = 11
[04.03.2015 13:23:25] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:23:25] ***********************************************************************************************************
[04.03.2015 13:23:25] ***********************************************************************************************************
[04.03.2015 13:23:25] --------------------- start operation for send message -------------
[04.03.2015 13:23:25] --------------------- end operation for send message -------------
[04.03.2015 13:23:25] ***********************************************************************************************************
[04.03.2015 13:31:34] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:31:34] ***********************************************************************************************************
[04.03.2015 13:31:34] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:31:34] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:31:34] 4
[04.03.2015 13:31:34] 5
[04.03.2015 13:31:34] 7
[04.03.2015 13:31:34] 8
[04.03.2015 13:31:34] 11
[04.03.2015 13:31:34] 12
[04.03.2015 13:31:34] 13
[04.03.2015 13:31:34] ballance = 0.00, cost=2318.13
[04.03.2015 13:31:34] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:31:34] there is not enough money at the bill_account = 11
[04.03.2015 13:31:34] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:31:34] 4
[04.03.2015 13:31:34] 5
[04.03.2015 13:31:34] 7
[04.03.2015 13:31:34] 8
[04.03.2015 13:31:34] 11
[04.03.2015 13:31:34] 12
[04.03.2015 13:31:34] 13
[04.03.2015 13:31:34] ballance = 0.00, cost=2318.13
[04.03.2015 13:31:34] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:31:34] there is not enough money at the bill_account = 11
[04.03.2015 13:31:34] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:31:34] 4
[04.03.2015 13:31:34] 5
[04.03.2015 13:31:34] 7
[04.03.2015 13:31:34] 8
[04.03.2015 13:31:34] 11
[04.03.2015 13:31:34] 12
[04.03.2015 13:31:34] 13
[04.03.2015 13:31:34] ballance = 0.00, cost=2318.13
[04.03.2015 13:31:34] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:31:34] there is not enough money at the bill_account = 11
[04.03.2015 13:31:34] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:31:34] 4
[04.03.2015 13:31:34] 5
[04.03.2015 13:31:34] 7
[04.03.2015 13:31:34] 8
[04.03.2015 13:31:34] 11
[04.03.2015 13:31:34] 12
[04.03.2015 13:31:34] 13
[04.03.2015 13:31:34] ballance = 0.00, cost=2538.90
[04.03.2015 13:31:34] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:31:34] there is not enough money at the bill_account = 11
[04.03.2015 13:31:34] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:31:34] ***********************************************************************************************************
[04.03.2015 13:31:34] ***********************************************************************************************************
[04.03.2015 13:31:34] --------------------- start operation for send message -------------
[04.03.2015 13:31:34] --------------------- end operation for send message -------------
[04.03.2015 13:31:34] ***********************************************************************************************************
[04.03.2015 13:32:53] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:32:53] ***********************************************************************************************************
[04.03.2015 13:32:53] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:32:53] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:32:53] 4
[04.03.2015 13:32:53] 5
[04.03.2015 13:32:53] 7
[04.03.2015 13:32:53] 8
[04.03.2015 13:32:53] 11
[04.03.2015 13:32:53] 12
[04.03.2015 13:32:53] 13
[04.03.2015 13:32:53] ballance = 0.00, cost=2318.13
[04.03.2015 13:32:53] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:32:53] there is not enough money at the bill_account = 11
[04.03.2015 13:32:53] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:32:53] 4
[04.03.2015 13:32:53] 5
[04.03.2015 13:32:53] 7
[04.03.2015 13:32:53] 8
[04.03.2015 13:32:53] 11
[04.03.2015 13:32:53] 12
[04.03.2015 13:32:53] 13
[04.03.2015 13:32:53] ballance = 0.00, cost=2318.13
[04.03.2015 13:32:53] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:32:53] there is not enough money at the bill_account = 11
[04.03.2015 13:32:53] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:32:53] 4
[04.03.2015 13:32:53] 5
[04.03.2015 13:32:53] 7
[04.03.2015 13:32:53] 8
[04.03.2015 13:32:53] 11
[04.03.2015 13:32:53] 12
[04.03.2015 13:32:53] 13
[04.03.2015 13:32:53] ballance = 0.00, cost=2318.13
[04.03.2015 13:32:53] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:32:53] there is not enough money at the bill_account = 11
[04.03.2015 13:32:53] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:32:53] 4
[04.03.2015 13:32:53] 5
[04.03.2015 13:32:53] 7
[04.03.2015 13:32:53] 8
[04.03.2015 13:32:53] 11
[04.03.2015 13:32:53] 12
[04.03.2015 13:32:53] 13
[04.03.2015 13:32:53] ballance = 0.00, cost=2538.90
[04.03.2015 13:32:53] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:32:53] there is not enough money at the bill_account = 11
[04.03.2015 13:32:53] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:32:53] ***********************************************************************************************************
[04.03.2015 13:32:53] ***********************************************************************************************************
[04.03.2015 13:32:53] --------------------- start operation for send message -------------
[04.03.2015 13:32:53] --------------------- end operation for send message -------------
[04.03.2015 13:32:53] ***********************************************************************************************************
[04.03.2015 13:34:38] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:34:38] ***********************************************************************************************************
[04.03.2015 13:34:38] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:34:38] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:34:38] 4
[04.03.2015 13:34:38] 5
[04.03.2015 13:34:38] 7
[04.03.2015 13:34:38] 8
[04.03.2015 13:34:38] 11
[04.03.2015 13:34:38] 12
[04.03.2015 13:34:38] 13
[04.03.2015 13:34:38] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:38] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:38] there is not enough money at the bill_account = 11
[04.03.2015 13:34:38] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:34:38] 4
[04.03.2015 13:34:38] 5
[04.03.2015 13:34:38] 7
[04.03.2015 13:34:38] 8
[04.03.2015 13:34:38] 11
[04.03.2015 13:34:38] 12
[04.03.2015 13:34:38] 13
[04.03.2015 13:34:38] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:38] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:38] there is not enough money at the bill_account = 11
[04.03.2015 13:34:38] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:34:38] 4
[04.03.2015 13:34:38] 5
[04.03.2015 13:34:38] 7
[04.03.2015 13:34:38] 8
[04.03.2015 13:34:38] 11
[04.03.2015 13:34:38] 12
[04.03.2015 13:34:38] 13
[04.03.2015 13:34:38] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:38] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:38] there is not enough money at the bill_account = 11
[04.03.2015 13:34:38] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:34:38] 4
[04.03.2015 13:34:38] 5
[04.03.2015 13:34:38] 7
[04.03.2015 13:34:38] 8
[04.03.2015 13:34:38] 11
[04.03.2015 13:34:38] 12
[04.03.2015 13:34:38] 13
[04.03.2015 13:34:38] ballance = 0.00, cost=2538.90
[04.03.2015 13:34:38] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:38] there is not enough money at the bill_account = 11
[04.03.2015 13:34:38] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:34:38] ***********************************************************************************************************
[04.03.2015 13:34:38] ***********************************************************************************************************
[04.03.2015 13:34:38] --------------------- start operation for send message -------------
[04.03.2015 13:34:38] --------------------- end operation for send message -------------
[04.03.2015 13:34:38] ***********************************************************************************************************
[04.03.2015 13:34:59] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:34:59] ***********************************************************************************************************
[04.03.2015 13:34:59] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:34:59] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:34:59] 4
[04.03.2015 13:34:59] 5
[04.03.2015 13:34:59] 7
[04.03.2015 13:34:59] 8
[04.03.2015 13:34:59] 11
[04.03.2015 13:34:59] 12
[04.03.2015 13:34:59] 13
[04.03.2015 13:34:59] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:59] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:59] there is not enough money at the bill_account = 11
[04.03.2015 13:34:59] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:34:59] 4
[04.03.2015 13:34:59] 5
[04.03.2015 13:34:59] 7
[04.03.2015 13:34:59] 8
[04.03.2015 13:34:59] 11
[04.03.2015 13:34:59] 12
[04.03.2015 13:34:59] 13
[04.03.2015 13:34:59] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:59] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:59] there is not enough money at the bill_account = 11
[04.03.2015 13:34:59] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:34:59] 4
[04.03.2015 13:34:59] 5
[04.03.2015 13:34:59] 7
[04.03.2015 13:34:59] 8
[04.03.2015 13:34:59] 11
[04.03.2015 13:34:59] 12
[04.03.2015 13:34:59] 13
[04.03.2015 13:34:59] ballance = 0.00, cost=2318.13
[04.03.2015 13:34:59] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:59] there is not enough money at the bill_account = 11
[04.03.2015 13:34:59] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:34:59] 4
[04.03.2015 13:34:59] 5
[04.03.2015 13:34:59] 7
[04.03.2015 13:34:59] 8
[04.03.2015 13:34:59] 11
[04.03.2015 13:34:59] 12
[04.03.2015 13:34:59] 13
[04.03.2015 13:34:59] ballance = 0.00, cost=2538.90
[04.03.2015 13:34:59] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:34:59] there is not enough money at the bill_account = 11
[04.03.2015 13:34:59] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:34:59] ***********************************************************************************************************
[04.03.2015 13:34:59] ***********************************************************************************************************
[04.03.2015 13:34:59] --------------------- start operation for send message -------------
[04.03.2015 13:34:59] --------------------- end operation for send message -------------
[04.03.2015 13:34:59] ***********************************************************************************************************
[04.03.2015 13:35:46] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:35:46] ***********************************************************************************************************
[04.03.2015 13:35:46] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:35:46] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:35:46] 4
[04.03.2015 13:35:46] 5
[04.03.2015 13:35:46] 7
[04.03.2015 13:35:46] 8
[04.03.2015 13:35:46] 11
[04.03.2015 13:35:46] 12
[04.03.2015 13:35:46] 13
[04.03.2015 13:35:46] ballance = 0.00, cost=2318.13
[04.03.2015 13:35:46] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:35:46] there is not enough money at the bill_account = 11
[04.03.2015 13:35:46] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:35:46] 4
[04.03.2015 13:35:46] 5
[04.03.2015 13:35:46] 7
[04.03.2015 13:35:46] 8
[04.03.2015 13:35:46] 11
[04.03.2015 13:35:46] 12
[04.03.2015 13:35:46] 13
[04.03.2015 13:35:46] ballance = 0.00, cost=2318.13
[04.03.2015 13:35:46] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:35:46] there is not enough money at the bill_account = 11
[04.03.2015 13:35:46] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:35:46] 4
[04.03.2015 13:35:46] 5
[04.03.2015 13:35:46] 7
[04.03.2015 13:35:46] 8
[04.03.2015 13:35:46] 11
[04.03.2015 13:35:46] 12
[04.03.2015 13:35:46] 13
[04.03.2015 13:35:46] ballance = 0.00, cost=2318.13
[04.03.2015 13:35:46] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:35:46] there is not enough money at the bill_account = 11
[04.03.2015 13:35:46] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:35:46] 4
[04.03.2015 13:35:46] 5
[04.03.2015 13:35:46] 7
[04.03.2015 13:35:46] 8
[04.03.2015 13:35:46] 11
[04.03.2015 13:35:46] 12
[04.03.2015 13:35:46] 13
[04.03.2015 13:35:46] ballance = 0.00, cost=2538.90
[04.03.2015 13:35:46] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:35:46] there is not enough money at the bill_account = 11
[04.03.2015 13:35:46] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:35:46] ***********************************************************************************************************
[04.03.2015 13:35:46] ***********************************************************************************************************
[04.03.2015 13:35:46] --------------------- start operation for send message -------------
[04.03.2015 13:35:46] --------------------- end operation for send message -------------
[04.03.2015 13:35:46] ***********************************************************************************************************
[04.03.2015 13:37:00] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:37:00] ***********************************************************************************************************
[04.03.2015 13:37:00] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:37:00] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:37:00] 4
[04.03.2015 13:37:00] 5
[04.03.2015 13:37:00] 7
[04.03.2015 13:37:00] 8
[04.03.2015 13:37:00] 11
[04.03.2015 13:37:00] 12
[04.03.2015 13:37:00] 13
[04.03.2015 13:37:00] ballance = 0.00, cost=2318.13
[04.03.2015 13:37:00] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:37:00] there is not enough money at the bill_account = 11
[04.03.2015 13:37:00] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:37:00] 4
[04.03.2015 13:37:00] 5
[04.03.2015 13:37:00] 7
[04.03.2015 13:37:00] 8
[04.03.2015 13:37:00] 11
[04.03.2015 13:37:00] 12
[04.03.2015 13:37:00] 13
[04.03.2015 13:37:00] ballance = 0.00, cost=2318.13
[04.03.2015 13:37:00] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:37:00] there is not enough money at the bill_account = 11
[04.03.2015 13:37:00] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:37:00] 4
[04.03.2015 13:37:00] 5
[04.03.2015 13:37:00] 7
[04.03.2015 13:37:00] 8
[04.03.2015 13:37:00] 11
[04.03.2015 13:37:00] 12
[04.03.2015 13:37:00] 13
[04.03.2015 13:37:00] ballance = 0.00, cost=2318.13
[04.03.2015 13:37:00] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:37:00] there is not enough money at the bill_account = 11
[04.03.2015 13:37:00] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:37:00] 4
[04.03.2015 13:37:00] 5
[04.03.2015 13:37:00] 7
[04.03.2015 13:37:00] 8
[04.03.2015 13:37:00] 11
[04.03.2015 13:37:00] 12
[04.03.2015 13:37:00] 13
[04.03.2015 13:37:00] ballance = 0.00, cost=2538.90
[04.03.2015 13:37:00] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:37:00] there is not enough money at the bill_account = 11
[04.03.2015 13:37:00] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:37:00] ***********************************************************************************************************
[04.03.2015 13:37:00] ***********************************************************************************************************
[04.03.2015 13:37:00] --------------------- start operation for send message -------------
[04.03.2015 13:37:00] --------------------- end operation for send message -------------
[04.03.2015 13:37:00] ***********************************************************************************************************
[04.03.2015 13:38:29] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:38:29] ***********************************************************************************************************
[04.03.2015 13:38:29] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:38:29] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:38:29] 4
[04.03.2015 13:38:29] 5
[04.03.2015 13:38:29] 7
[04.03.2015 13:38:29] 8
[04.03.2015 13:38:29] 11
[04.03.2015 13:38:29] 12
[04.03.2015 13:38:29] 13
[04.03.2015 13:38:29] ballance = 0.00, cost=2318.13
[04.03.2015 13:38:29] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:38:29] there is not enough money at the bill_account = 11
[04.03.2015 13:38:29] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:38:29] 4
[04.03.2015 13:38:29] 5
[04.03.2015 13:38:29] 7
[04.03.2015 13:38:29] 8
[04.03.2015 13:38:29] 11
[04.03.2015 13:38:29] 12
[04.03.2015 13:38:29] 13
[04.03.2015 13:38:29] ballance = 0.00, cost=2318.13
[04.03.2015 13:38:29] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:38:29] there is not enough money at the bill_account = 11
[04.03.2015 13:38:29] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:38:29] 4
[04.03.2015 13:38:29] 5
[04.03.2015 13:38:29] 7
[04.03.2015 13:38:29] 8
[04.03.2015 13:38:29] 11
[04.03.2015 13:38:29] 12
[04.03.2015 13:38:29] 13
[04.03.2015 13:38:29] ballance = 0.00, cost=2318.13
[04.03.2015 13:38:29] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:38:29] there is not enough money at the bill_account = 11
[04.03.2015 13:38:29] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:38:29] 4
[04.03.2015 13:38:29] 5
[04.03.2015 13:38:29] 7
[04.03.2015 13:38:29] 8
[04.03.2015 13:38:29] 11
[04.03.2015 13:38:29] 12
[04.03.2015 13:38:29] 13
[04.03.2015 13:38:29] ballance = 0.00, cost=2538.90
[04.03.2015 13:38:29] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:38:29] there is not enough money at the bill_account = 11
[04.03.2015 13:38:29] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:38:29] ***********************************************************************************************************
[04.03.2015 13:38:29] ***********************************************************************************************************
[04.03.2015 13:38:29] --------------------- start operation for send message -------------
[04.03.2015 13:38:29] --------------------- end operation for send message -------------
[04.03.2015 13:38:29] ***********************************************************************************************************
[04.03.2015 13:39:02] bill=11, spis=[253, 258, 263, 268]
[04.03.2015 13:39:02] ***********************************************************************************************************
[04.03.2015 13:39:02] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 13:39:02] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 13:39:02] 4
[04.03.2015 13:39:02] 5
[04.03.2015 13:39:02] 7
[04.03.2015 13:39:02] 8
[04.03.2015 13:39:02] 11
[04.03.2015 13:39:02] 12
[04.03.2015 13:39:02] 13
[04.03.2015 13:39:02] ballance = 0.00, cost=2318.13
[04.03.2015 13:39:02] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:39:02] there is not enough money at the bill_account = 11
[04.03.2015 13:39:02] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 13:39:02] 4
[04.03.2015 13:39:02] 5
[04.03.2015 13:39:02] 7
[04.03.2015 13:39:02] 8
[04.03.2015 13:39:02] 11
[04.03.2015 13:39:02] 12
[04.03.2015 13:39:02] 13
[04.03.2015 13:39:02] ballance = 0.00, cost=2318.13
[04.03.2015 13:39:02] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:39:02] there is not enough money at the bill_account = 11
[04.03.2015 13:39:02] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 13:39:02] 4
[04.03.2015 13:39:02] 5
[04.03.2015 13:39:02] 7
[04.03.2015 13:39:02] 8
[04.03.2015 13:39:02] 11
[04.03.2015 13:39:02] 12
[04.03.2015 13:39:02] 13
[04.03.2015 13:39:02] ballance = 0.00, cost=2318.13
[04.03.2015 13:39:02] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:39:02] there is not enough money at the bill_account = 11
[04.03.2015 13:39:02] --------------------- start operation with zakaz = 268 --------------
[04.03.2015 13:39:02] 4
[04.03.2015 13:39:02] 5
[04.03.2015 13:39:02] 7
[04.03.2015 13:39:02] 8
[04.03.2015 13:39:02] 11
[04.03.2015 13:39:02] 12
[04.03.2015 13:39:02] 13
[04.03.2015 13:39:02] ballance = 0.00, cost=2538.90
[04.03.2015 13:39:02] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 13:39:02] there is not enough money at the bill_account = 11
[04.03.2015 13:39:02] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 13:39:02] ***********************************************************************************************************
[04.03.2015 13:39:02] ***********************************************************************************************************
[04.03.2015 13:39:02] --------------------- start operation for send message -------------
[04.03.2015 13:39:02] --------------------- end operation for send message -------------
[04.03.2015 13:39:02] ***********************************************************************************************************
[04.03.2015 13:43:58] ***********************************************************************************************************
[04.03.2015 13:50:38] ***********************************************************************************************************
[04.03.2015 13:56:18] ***********************************************************************************************************
[04.03.2015 13:58:11] ***********************************************************************************************************
[04.03.2015 13:58:41] ***********************************************************************************************************
[04.03.2015 14:47:36] ***********************************************************************************************************
[04.03.2015 15:01:00] ***********************************************************************************************************
[04.03.2015 15:01:31] ***********************************************************************************************************
[04.03.2015 15:02:31] ***********************************************************************************************************
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:10:44] Compulsory shutdown zakaz = 268 is successfully complete
[04.03.2015 15:10:44] Operation on compulsory shutdown and deactivated of service`s is successfully complete, zakazy=[268]
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:10:44] bill=11, spis=[253, 258, 263]
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:10:44] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 15:10:44] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 15:10:44] 4
[04.03.2015 15:10:44] 5
[04.03.2015 15:10:44] 7
[04.03.2015 15:10:44] 8
[04.03.2015 15:10:44] 11
[04.03.2015 15:10:44] 12
[04.03.2015 15:10:44] 13
[04.03.2015 15:10:44] ballance = 0.00, cost=2318.13
[04.03.2015 15:10:44] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:10:44] there is not enough money at the bill_account = 11
[04.03.2015 15:10:44] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 15:10:44] 4
[04.03.2015 15:10:44] 5
[04.03.2015 15:10:44] 7
[04.03.2015 15:10:44] 8
[04.03.2015 15:10:44] 11
[04.03.2015 15:10:44] 12
[04.03.2015 15:10:44] 13
[04.03.2015 15:10:44] ballance = 0.00, cost=2318.13
[04.03.2015 15:10:44] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:10:44] there is not enough money at the bill_account = 11
[04.03.2015 15:10:44] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 15:10:44] 4
[04.03.2015 15:10:44] 5
[04.03.2015 15:10:44] 7
[04.03.2015 15:10:44] 8
[04.03.2015 15:10:44] 11
[04.03.2015 15:10:44] 12
[04.03.2015 15:10:44] 13
[04.03.2015 15:10:44] ballance = 0.00, cost=2318.13
[04.03.2015 15:10:44] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:10:44] there is not enough money at the bill_account = 11
[04.03.2015 15:10:44] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:10:44] --------------------- start operation for send message -------------
[04.03.2015 15:10:44] Send message for bill_account=11
[04.03.2015 15:10:44] --------------------- end operation for send message -------------
[04.03.2015 15:10:44] ***********************************************************************************************************
[04.03.2015 15:20:34] bill=11, spis=[253, 258, 263]
[04.03.2015 15:20:34] ***********************************************************************************************************
[04.03.2015 15:20:34] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 15:20:34] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 15:20:34] 4
[04.03.2015 15:20:34] 5
[04.03.2015 15:20:34] 7
[04.03.2015 15:20:34] 8
[04.03.2015 15:20:34] 11
[04.03.2015 15:20:34] 12
[04.03.2015 15:20:34] 13
[04.03.2015 15:20:34] ballance = 0.00, cost=2318.13
[04.03.2015 15:20:34] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:20:34] there is not enough money at the bill_account = 11
[04.03.2015 15:20:34] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 15:20:35] 4
[04.03.2015 15:20:35] 5
[04.03.2015 15:20:35] 7
[04.03.2015 15:20:35] 8
[04.03.2015 15:20:35] 11
[04.03.2015 15:20:35] 12
[04.03.2015 15:20:35] 13
[04.03.2015 15:20:35] ballance = 0.00, cost=2318.13
[04.03.2015 15:20:35] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:20:35] there is not enough money at the bill_account = 11
[04.03.2015 15:20:35] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 15:20:35] 4
[04.03.2015 15:20:35] 5
[04.03.2015 15:20:35] 7
[04.03.2015 15:20:35] 8
[04.03.2015 15:20:35] 11
[04.03.2015 15:20:35] 12
[04.03.2015 15:20:35] 13
[04.03.2015 15:20:35] ballance = 0.00, cost=2318.13
[04.03.2015 15:20:35] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:20:35] there is not enough money at the bill_account = 11
[04.03.2015 15:20:35] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 15:20:35] ***********************************************************************************************************
[04.03.2015 15:20:35] ***********************************************************************************************************
[04.03.2015 15:20:35] --------------------- start operation for send message -------------
[04.03.2015 15:20:35] --------------------- end operation for send message -------------
[04.03.2015 15:20:35] ***********************************************************************************************************
[04.03.2015 15:34:31] bill=11, spis=[253, 258, 263]
[04.03.2015 15:34:31] ***********************************************************************************************************
[04.03.2015 15:34:31] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 15:34:31] --------------------- start operation with zakaz = 253 --------------
[04.03.2015 15:34:31] 4
[04.03.2015 15:34:31] 5
[04.03.2015 15:34:31] 7
[04.03.2015 15:34:31] 8
[04.03.2015 15:34:31] 11
[04.03.2015 15:34:31] 12
[04.03.2015 15:34:31] 13
[04.03.2015 15:34:31] ballance = 0.00, cost=2318.13
[04.03.2015 15:34:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:34:31] there is not enough money at the bill_account = 11
[04.03.2015 15:34:31] --------------------- start operation with zakaz = 258 --------------
[04.03.2015 15:34:31] 4
[04.03.2015 15:34:31] 5
[04.03.2015 15:34:31] 7
[04.03.2015 15:34:31] 8
[04.03.2015 15:34:31] 11
[04.03.2015 15:34:31] 12
[04.03.2015 15:34:31] 13
[04.03.2015 15:34:31] ballance = 0.00, cost=2318.13
[04.03.2015 15:34:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:34:31] there is not enough money at the bill_account = 11
[04.03.2015 15:34:31] --------------------- start operation with zakaz = 263 --------------
[04.03.2015 15:34:31] 4
[04.03.2015 15:34:31] 5
[04.03.2015 15:34:31] 7
[04.03.2015 15:34:31] 8
[04.03.2015 15:34:31] 11
[04.03.2015 15:34:31] 12
[04.03.2015 15:34:31] 13
[04.03.2015 15:34:31] ballance = 0.00, cost=2318.13
[04.03.2015 15:34:31] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:34:31] there is not enough money at the bill_account = 11
[04.03.2015 15:34:31] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 15:34:31] ***********************************************************************************************************
[04.03.2015 15:34:31] ***********************************************************************************************************
[04.03.2015 15:34:31] --------------------- start operation for send message -------------
[04.03.2015 15:34:31] --------------------- end operation for send message -------------
[04.03.2015 15:34:31] ***********************************************************************************************************
[04.03.2015 15:50:57] utf-8
[04.03.2015 15:52:21] utf-8
[04.03.2015 15:53:07] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[04.03.2015 15:53:07] Exception in create_check: file:models.py line:587
[04.03.2015 15:53:07] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[04.03.2015 15:53:07] Exception in send_mail: file:views.py line:211
[04.03.2015 15:53:07] ***********************************************************************************************************
[04.03.2015 15:53:07] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 15:53:07] --------------------- start operation with zakaz = 273 --------------
[04.03.2015 15:53:07] 4
[04.03.2015 15:53:07] 5
[04.03.2015 15:53:07] 7
[04.03.2015 15:53:07] 8
[04.03.2015 15:53:07] 11
[04.03.2015 15:53:07] 12
[04.03.2015 15:53:07] 13
[04.03.2015 15:53:07] ballance = 0.00, cost=2664.52
[04.03.2015 15:53:07] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 15:53:07] there is not enough money at the bill_account = 11
[04.03.2015 15:53:07] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 15:53:07] ***********************************************************************************************************
[04.03.2015 16:04:34] bill=11, spis=[273]
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:04:34] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:04:34] --------------------- start operation with zakaz = 273 --------------
[04.03.2015 16:04:34] 4
[04.03.2015 16:04:34] 5
[04.03.2015 16:04:34] 7
[04.03.2015 16:04:34] 8
[04.03.2015 16:04:34] 9
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:04:34] Compulsory shutdown zakaz = 273 is successfully complete
[04.03.2015 16:04:34] Operation on compulsory shutdown and deactivated of service`s is successfully complete, zakazy=[273]
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:04:34] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:04:34] --------------------- start operation for send message -------------
[04.03.2015 16:04:34] --------------------- end operation for send message -------------
[04.03.2015 16:04:34] ***********************************************************************************************************
[04.03.2015 16:11:38] utf-8
[04.03.2015 16:12:52] utf-8
[04.03.2015 16:14:59] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[04.03.2015 16:14:59] Exception in create_check: file:models.py line:587
[04.03.2015 16:14:59] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[04.03.2015 16:14:59] Exception in send_mail: file:views.py line:211
[04.03.2015 16:14:59] ***********************************************************************************************************
[04.03.2015 16:14:59] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:14:59] --------------------- start operation with zakaz = 278 --------------
[04.03.2015 16:14:59] 4
[04.03.2015 16:14:59] 5
[04.03.2015 16:14:59] 7
[04.03.2015 16:14:59] 8
[04.03.2015 16:14:59] 11
[04.03.2015 16:14:59] 12
[04.03.2015 16:14:59] 13
[04.03.2015 16:14:59] ballance = 10000.00, cost=2664.52
[04.03.2015 16:14:59] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:14:59] write_off_of_money
[04.03.2015 16:14:59] exception when saving log...
[04.03.2015 16:14:59] Exception in write_off_of_money: file:views.py line:1171
[04.03.2015 16:14:59] --------------------- end operation with zakaz = 278 --------------
[04.03.2015 16:14:59] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:14:59] ***********************************************************************************************************
[04.03.2015 16:16:13] bill=11, spis=[278]
[04.03.2015 16:16:13] ***********************************************************************************************************
[04.03.2015 16:16:13] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:16:13] --------------------- start operation with zakaz = 278 --------------
[04.03.2015 16:16:13] 4
[04.03.2015 16:16:13] 5
[04.03.2015 16:16:13] 7
[04.03.2015 16:16:13] 8
[04.03.2015 16:16:13] 11
[04.03.2015 16:16:13] 12
[04.03.2015 16:16:13] 13
[04.03.2015 16:16:13] ballance = 10000.00, cost=2664.52
[04.03.2015 16:16:13] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:16:13] write_off_of_money
[04.03.2015 16:16:13] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (2, Аренда сервера (Заказ № 278 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №278, 2015-03-04 18:16:13.635+04, null, null, null, null, null).
'
[04.03.2015 16:16:13] Exception in write_off_of_money: file:views.py line:1171
[04.03.2015 16:16:13] --------------------- end operation with zakaz = 278 --------------
[04.03.2015 16:16:13] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:16:13] ***********************************************************************************************************
[04.03.2015 16:16:13] ***********************************************************************************************************
[04.03.2015 16:16:13] --------------------- start operation for send message -------------
[04.03.2015 16:16:13] --------------------- end operation for send message -------------
[04.03.2015 16:16:13] ***********************************************************************************************************
[04.03.2015 16:17:48] bill=11, spis=[278]
[04.03.2015 16:17:48] ***********************************************************************************************************
[04.03.2015 16:17:48] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:17:48] --------------------- start operation with zakaz = 278 --------------
[04.03.2015 16:17:48] 4
[04.03.2015 16:17:48] 5
[04.03.2015 16:17:48] 7
[04.03.2015 16:17:48] 8
[04.03.2015 16:17:48] 11
[04.03.2015 16:17:48] 12
[04.03.2015 16:17:48] 13
[04.03.2015 16:17:48] ballance = 10000.00, cost=2664.52
[04.03.2015 16:17:48] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:17:48] write_off_of_money
[04.03.2015 16:17:48] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (3, Аренда сервера (Заказ № 278 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №278, 2015-03-04 18:17:48.421+04, null, null, null, null, null).
'
[04.03.2015 16:17:48] Exception in write_off_of_money: file:views.py line:1173
[04.03.2015 16:17:48] --------------------- end operation with zakaz = 278 --------------
[04.03.2015 16:17:48] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:17:48] ***********************************************************************************************************
[04.03.2015 16:17:48] ***********************************************************************************************************
[04.03.2015 16:17:48] --------------------- start operation for send message -------------
[04.03.2015 16:17:48] --------------------- end operation for send message -------------
[04.03.2015 16:17:48] ***********************************************************************************************************
[04.03.2015 16:27:01] bill=11, spis=[278]
[04.03.2015 16:27:01] ***********************************************************************************************************
[04.03.2015 16:27:01] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:27:01] --------------------- start operation with zakaz = 278 --------------
[04.03.2015 16:27:01] 4
[04.03.2015 16:27:01] 5
[04.03.2015 16:27:01] 7
[04.03.2015 16:27:01] 8
[04.03.2015 16:27:01] 11
[04.03.2015 16:27:01] 12
[04.03.2015 16:27:01] 13
[04.03.2015 16:27:01] ballance = 10000.00, cost=2664.52
[04.03.2015 16:27:01] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:27:01] write_off_of_money
[04.03.2015 16:27:01] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (4, Аренда сервера (Заказ № 278 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №278, 2015-03-04 18:27:01.029+04, null, null, null, null, null).
'
[04.03.2015 16:27:01] Exception in write_off_of_money: file:views.py line:1171
[04.03.2015 16:27:01] --------------------- end operation with zakaz = 278 --------------
[04.03.2015 16:27:01] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:27:01] ***********************************************************************************************************
[04.03.2015 16:27:01] ***********************************************************************************************************
[04.03.2015 16:27:01] --------------------- start operation for send message -------------
[04.03.2015 16:27:01] --------------------- end operation for send message -------------
[04.03.2015 16:27:01] ***********************************************************************************************************
[04.03.2015 16:46:51] utf-8
[04.03.2015 16:46:55] utf-8
[04.03.2015 16:47:16] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[04.03.2015 16:47:16] Exception in create_check: file:models.py line:587
[04.03.2015 16:47:16] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[04.03.2015 16:47:16] Exception in send_mail: file:views.py line:211
[04.03.2015 16:47:49] bill=11, spis=[283]
[04.03.2015 16:47:49] ***********************************************************************************************************
[04.03.2015 16:47:49] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:47:49] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:47:49] 4
[04.03.2015 16:47:49] 5
[04.03.2015 16:47:49] 7
[04.03.2015 16:47:49] 8
[04.03.2015 16:47:49] 11
[04.03.2015 16:47:49] 12
[04.03.2015 16:47:49] 13
[04.03.2015 16:47:49] ballance = 10000.00, cost=2664.52
[04.03.2015 16:47:49] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:47:49] write_off_of_money
[04.03.2015 16:47:49] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (5, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:47:49.521+04, null, null, null, null, null).
'
[04.03.2015 16:47:49] Exception in write_off_of_money: file:views.py line:1171
[04.03.2015 16:47:49] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:47:49] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:47:49] ***********************************************************************************************************
[04.03.2015 16:47:49] ***********************************************************************************************************
[04.03.2015 16:47:49] --------------------- start operation for send message -------------
[04.03.2015 16:47:49] --------------------- end operation for send message -------------
[04.03.2015 16:47:49] ***********************************************************************************************************
[04.03.2015 16:50:51] bill=11, spis=[283]
[04.03.2015 16:50:51] ***********************************************************************************************************
[04.03.2015 16:50:51] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:50:51] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:50:51] 4
[04.03.2015 16:50:51] 5
[04.03.2015 16:50:51] 7
[04.03.2015 16:50:51] 8
[04.03.2015 16:50:51] 11
[04.03.2015 16:50:51] 12
[04.03.2015 16:50:51] 13
[04.03.2015 16:50:51] ballance = 10000.00, cost=2664.52
[04.03.2015 16:50:51] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:50:51] write_off_of_money
[04.03.2015 16:50:51] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (6, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:50:51.755+04, null, null, null, null, null).
'
[04.03.2015 16:50:51] Exception in write_off_of_money: file:views.py line:1172
[04.03.2015 16:50:51] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:50:51] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:50:51] ***********************************************************************************************************
[04.03.2015 16:50:51] ***********************************************************************************************************
[04.03.2015 16:50:51] --------------------- start operation for send message -------------
[04.03.2015 16:50:51] --------------------- end operation for send message -------------
[04.03.2015 16:50:51] ***********************************************************************************************************
[04.03.2015 16:51:57] bill=11, spis=[283]
[04.03.2015 16:51:57] ***********************************************************************************************************
[04.03.2015 16:51:57] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:51:57] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:51:57] 4
[04.03.2015 16:51:57] 5
[04.03.2015 16:51:57] 7
[04.03.2015 16:51:57] 8
[04.03.2015 16:51:57] 11
[04.03.2015 16:51:57] 12
[04.03.2015 16:51:57] 13
[04.03.2015 16:51:57] ballance = 10000.00, cost=2664.52
[04.03.2015 16:51:57] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:51:57] write_off_of_money
[04.03.2015 16:51:57] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (7, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:51:57.68+04, null, null, null, null, null).
'
[04.03.2015 16:51:57] Exception in write_off_of_money: file:views.py line:1173
[04.03.2015 16:51:57] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:51:57] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:51:57] ***********************************************************************************************************
[04.03.2015 16:51:57] ***********************************************************************************************************
[04.03.2015 16:51:57] --------------------- start operation for send message -------------
[04.03.2015 16:51:57] --------------------- end operation for send message -------------
[04.03.2015 16:51:57] ***********************************************************************************************************
[04.03.2015 16:53:50] bill=11, spis=[283]
[04.03.2015 16:53:50] ***********************************************************************************************************
[04.03.2015 16:53:50] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:53:50] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:53:50] 4
[04.03.2015 16:53:50] 5
[04.03.2015 16:53:50] 7
[04.03.2015 16:53:50] 8
[04.03.2015 16:53:50] 11
[04.03.2015 16:53:50] 12
[04.03.2015 16:53:50] 13
[04.03.2015 16:53:50] ballance = 10000.00, cost=2664.52
[04.03.2015 16:53:50] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:53:50] write_off_of_money
[04.03.2015 16:53:50] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (8, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:53:50.903+04, null, null, null, null, null).
'
[04.03.2015 16:53:50] Exception in write_off_of_money: file:views.py line:1174
[04.03.2015 16:53:50] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:53:50] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:53:50] ***********************************************************************************************************
[04.03.2015 16:53:50] ***********************************************************************************************************
[04.03.2015 16:53:50] --------------------- start operation for send message -------------
[04.03.2015 16:53:50] --------------------- end operation for send message -------------
[04.03.2015 16:53:50] ***********************************************************************************************************
[04.03.2015 16:54:39] bill=11, spis=[283]
[04.03.2015 16:54:39] ***********************************************************************************************************
[04.03.2015 16:54:39] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:54:39] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:54:39] 4
[04.03.2015 16:54:39] 5
[04.03.2015 16:54:39] 7
[04.03.2015 16:54:39] 8
[04.03.2015 16:54:39] 11
[04.03.2015 16:54:39] 12
[04.03.2015 16:54:39] 13
[04.03.2015 16:54:39] ballance = 10000.00, cost=2664.52
[04.03.2015 16:54:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:54:39] write_off_of_money
[04.03.2015 16:54:39] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (9, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:54:39.28+04, null, null, null, null, null).
'
[04.03.2015 16:54:39] Exception in write_off_of_money: file:views.py line:1174
[04.03.2015 16:54:39] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:54:39] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:54:39] ***********************************************************************************************************
[04.03.2015 16:54:39] ***********************************************************************************************************
[04.03.2015 16:54:39] --------------------- start operation for send message -------------
[04.03.2015 16:54:39] --------------------- end operation for send message -------------
[04.03.2015 16:54:39] ***********************************************************************************************************
[04.03.2015 16:57:27] bill=11, spis=[283]
[04.03.2015 16:57:27] ***********************************************************************************************************
[04.03.2015 16:57:27] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 16:57:27] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 16:57:27] 4
[04.03.2015 16:57:27] 5
[04.03.2015 16:57:27] 7
[04.03.2015 16:57:27] 8
[04.03.2015 16:57:27] 11
[04.03.2015 16:57:27] 12
[04.03.2015 16:57:27] 13
[04.03.2015 16:57:27] ballance = 10000.00, cost=2664.52
[04.03.2015 16:57:27] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 16:57:27] write_off_of_money
[04.03.2015 16:57:27] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (10, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 18:57:27.291+04, null, null, null, null, null).
'
[04.03.2015 16:57:27] Exception in write_off_of_money: file:views.py line:1174
[04.03.2015 16:57:27] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 16:57:27] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 16:57:27] ***********************************************************************************************************
[04.03.2015 16:57:27] ***********************************************************************************************************
[04.03.2015 16:57:27] --------------------- start operation for send message -------------
[04.03.2015 16:57:27] --------------------- end operation for send message -------------
[04.03.2015 16:57:27] ***********************************************************************************************************
[04.03.2015 17:02:05] bill=11, spis=[283]
[04.03.2015 17:02:05] ***********************************************************************************************************
[04.03.2015 17:02:05] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:02:05] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:02:05] 4
[04.03.2015 17:02:05] 5
[04.03.2015 17:02:05] 7
[04.03.2015 17:02:05] 8
[04.03.2015 17:02:05] 11
[04.03.2015 17:02:05] 12
[04.03.2015 17:02:05] 13
[04.03.2015 17:02:05] ballance = 10000.00, cost=2664.52
[04.03.2015 17:02:05] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:02:05] write_off_of_money
[04.03.2015 17:02:05] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (11, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:02:05.264+04, null, null, null, null, null).
'
[04.03.2015 17:02:05] Exception in write_off_of_money: file:views.py line:1174
[04.03.2015 17:02:05] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:02:05] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:02:05] ***********************************************************************************************************
[04.03.2015 17:02:05] ***********************************************************************************************************
[04.03.2015 17:02:05] --------------------- start operation for send message -------------
[04.03.2015 17:02:05] --------------------- end operation for send message -------------
[04.03.2015 17:02:05] ***********************************************************************************************************
[04.03.2015 17:02:51] bill=11, spis=[283]
[04.03.2015 17:02:51] ***********************************************************************************************************
[04.03.2015 17:02:51] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:02:51] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:02:51] 4
[04.03.2015 17:02:51] 5
[04.03.2015 17:02:51] 7
[04.03.2015 17:02:51] 8
[04.03.2015 17:02:51] 11
[04.03.2015 17:02:51] 12
[04.03.2015 17:02:51] 13
[04.03.2015 17:02:51] ballance = 10000.00, cost=2664.52
[04.03.2015 17:02:51] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:02:51] write_off_of_money
[04.03.2015 17:02:51] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (12, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:02:51.629+04, null, null, null, null, null).
'
[04.03.2015 17:02:51] Exception in write_off_of_money: file:views.py line:1174
[04.03.2015 17:02:51] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:02:51] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:02:51] ***********************************************************************************************************
[04.03.2015 17:02:51] ***********************************************************************************************************
[04.03.2015 17:02:51] --------------------- start operation for send message -------------
[04.03.2015 17:02:51] --------------------- end operation for send message -------------
[04.03.2015 17:02:51] ***********************************************************************************************************
[04.03.2015 17:04:13] bill=11, spis=[283]
[04.03.2015 17:04:13] ***********************************************************************************************************
[04.03.2015 17:04:13] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:04:13] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:04:13] 4
[04.03.2015 17:04:13] 5
[04.03.2015 17:04:13] 7
[04.03.2015 17:04:13] 8
[04.03.2015 17:04:13] 11
[04.03.2015 17:04:13] 12
[04.03.2015 17:04:13] 13
[04.03.2015 17:04:13] ballance = 10000.00, cost=2664.52
[04.03.2015 17:04:13] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:04:13] write_off_of_money
[04.03.2015 17:04:13] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (13, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:04:13.026+04, null, null, null, null, null).
'
[04.03.2015 17:04:13] Exception in write_off_of_money: file:views.py line:1175
[04.03.2015 17:04:13] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:04:13] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:04:13] ***********************************************************************************************************
[04.03.2015 17:04:13] ***********************************************************************************************************
[04.03.2015 17:04:13] --------------------- start operation for send message -------------
[04.03.2015 17:04:13] --------------------- end operation for send message -------------
[04.03.2015 17:04:13] ***********************************************************************************************************
[04.03.2015 17:04:54] bill=11, spis=[283]
[04.03.2015 17:04:54] ***********************************************************************************************************
[04.03.2015 17:04:54] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:04:54] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:04:54] 4
[04.03.2015 17:04:54] 5
[04.03.2015 17:04:54] 7
[04.03.2015 17:04:54] 8
[04.03.2015 17:04:54] 11
[04.03.2015 17:04:54] 12
[04.03.2015 17:04:54] 13
[04.03.2015 17:04:54] ballance = 10000.00, cost=2664.52
[04.03.2015 17:04:54] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:04:54] write_off_of_money
[04.03.2015 17:04:54] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (14, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:04:54.596+04, null, null, null, null, null).
'
[04.03.2015 17:04:54] Exception in write_off_of_money: file:views.py line:1175
[04.03.2015 17:04:54] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:04:54] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:04:54] ***********************************************************************************************************
[04.03.2015 17:04:54] ***********************************************************************************************************
[04.03.2015 17:04:54] --------------------- start operation for send message -------------
[04.03.2015 17:04:54] --------------------- end operation for send message -------------
[04.03.2015 17:04:54] ***********************************************************************************************************
[04.03.2015 17:18:18] bill=11, spis=[283]
[04.03.2015 17:18:18] ***********************************************************************************************************
[04.03.2015 17:18:18] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:18:18] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:18:18] 4
[04.03.2015 17:18:18] 5
[04.03.2015 17:18:18] 7
[04.03.2015 17:18:18] 8
[04.03.2015 17:18:18] 11
[04.03.2015 17:18:18] 12
[04.03.2015 17:18:18] 13
[04.03.2015 17:18:18] ballance = 10000.00, cost=2664.52
[04.03.2015 17:18:18] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:18:18] write_off_of_money
[04.03.2015 17:18:18] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (15, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:18:18.339+04, null, null, null, null, null).
'
[04.03.2015 17:18:18] Exception in write_off_of_money: file:views.py line:1180
[04.03.2015 17:18:18] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:18:18] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:18:18] ***********************************************************************************************************
[04.03.2015 17:18:18] ***********************************************************************************************************
[04.03.2015 17:18:18] --------------------- start operation for send message -------------
[04.03.2015 17:18:18] --------------------- end operation for send message -------------
[04.03.2015 17:18:18] ***********************************************************************************************************
[04.03.2015 17:19:04] bill=11, spis=[283]
[04.03.2015 17:19:04] ***********************************************************************************************************
[04.03.2015 17:19:04] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:19:04] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:19:04] 4
[04.03.2015 17:19:04] 5
[04.03.2015 17:19:04] 7
[04.03.2015 17:19:04] 8
[04.03.2015 17:19:04] 11
[04.03.2015 17:19:04] 12
[04.03.2015 17:19:04] 13
[04.03.2015 17:19:04] ballance = 10000.00, cost=2664.52
[04.03.2015 17:19:04] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:19:04] write_off_of_money
[04.03.2015 17:19:04] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (16, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:19:04.658+04, null, null, null, null, null).
'
[04.03.2015 17:19:04] Exception in write_off_of_money: file:views.py line:1180
[04.03.2015 17:19:04] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:19:04] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:19:04] ***********************************************************************************************************
[04.03.2015 17:19:04] ***********************************************************************************************************
[04.03.2015 17:19:04] --------------------- start operation for send message -------------
[04.03.2015 17:19:04] --------------------- end operation for send message -------------
[04.03.2015 17:19:04] ***********************************************************************************************************
[04.03.2015 17:19:39] bill=11, spis=[283]
[04.03.2015 17:19:39] ***********************************************************************************************************
[04.03.2015 17:19:39] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:19:39] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:19:39] 4
[04.03.2015 17:19:39] 5
[04.03.2015 17:19:39] 7
[04.03.2015 17:19:39] 8
[04.03.2015 17:19:39] 11
[04.03.2015 17:19:39] 12
[04.03.2015 17:19:39] 13
[04.03.2015 17:19:39] ballance = 10000.00, cost=2664.52
[04.03.2015 17:19:39] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:19:39] write_off_of_money
[04.03.2015 17:19:39] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (17, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:19:39.71+04, null, null, null, null, null).
'
[04.03.2015 17:19:39] Exception in write_off_of_money: file:views.py line:1180
[04.03.2015 17:19:39] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:19:39] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:19:39] ***********************************************************************************************************
[04.03.2015 17:19:39] ***********************************************************************************************************
[04.03.2015 17:19:39] --------------------- start operation for send message -------------
[04.03.2015 17:19:39] --------------------- end operation for send message -------------
[04.03.2015 17:19:39] ***********************************************************************************************************
[04.03.2015 17:23:35] bill=11, spis=[283]
[04.03.2015 17:23:35] ***********************************************************************************************************
[04.03.2015 17:23:35] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:23:35] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:23:35] 4
[04.03.2015 17:23:35] 5
[04.03.2015 17:23:35] 7
[04.03.2015 17:23:35] 8
[04.03.2015 17:23:35] 11
[04.03.2015 17:23:35] 12
[04.03.2015 17:23:35] 13
[04.03.2015 17:23:35] ballance = 10000.00, cost=2664.52
[04.03.2015 17:23:35] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:23:35] write_off_of_money
[04.03.2015 17:23:35] Exception in write_off_of_money: 'ОШИБКА:  нулевое значение в колонке "promise" нарушает ограничение NOT NULL
DETAIL:  Ошибочная строка содержит (18, Аренда сервера (Заказ № 283 + портов: ..., 11, ZAKAZ_PAY, t, null, -2664.52, Оплата заказа №283, 2015-03-04 19:23:35.837+04, null, null, null, null, null).
'
[04.03.2015 17:23:35] Exception in write_off_of_money: file:views.py line:1180
[04.03.2015 17:23:35] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:23:35] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:23:35] ***********************************************************************************************************
[04.03.2015 17:23:35] ***********************************************************************************************************
[04.03.2015 17:23:35] --------------------- start operation for send message -------------
[04.03.2015 17:23:35] --------------------- end operation for send message -------------
[04.03.2015 17:23:35] ***********************************************************************************************************
[04.03.2015 17:24:43] bill=11, spis=[283]
[04.03.2015 17:24:43] ***********************************************************************************************************
[04.03.2015 17:24:43] --------------------- start operation write off of money for bill_account = 11 -------------
[04.03.2015 17:24:43] --------------------- start operation with zakaz = 283 --------------
[04.03.2015 17:24:43] 4
[04.03.2015 17:24:43] 5
[04.03.2015 17:24:43] 7
[04.03.2015 17:24:43] 8
[04.03.2015 17:24:43] 11
[04.03.2015 17:24:43] 12
[04.03.2015 17:24:43] 13
[04.03.2015 17:24:43] ballance = 10000.00, cost=2664.52
[04.03.2015 17:24:43] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[04.03.2015 17:24:43] write_off_of_money
[04.03.2015 17:24:43] --------------------- end operation with zakaz = 283 --------------
[04.03.2015 17:24:43] --------------------- end operation write off of money for bill_account = 11 -------------
[04.03.2015 17:24:43] ***********************************************************************************************************
[04.03.2015 17:24:43] ***********************************************************************************************************
[04.03.2015 17:24:43] --------------------- start operation for send message -------------
[04.03.2015 17:24:43] --------------------- end operation for send message -------------
[04.03.2015 17:24:43] ***********************************************************************************************************
[05.03.2015 10:05:39] utf-8
[05.03.2015 10:05:44] utf-8
[05.03.2015 14:52:01] utf-8
[05.03.2015 14:52:09] utf-8
[05.03.2015 14:55:08] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[05.03.2015 14:55:08] Exception in create_check: file:models.py line:587
[05.03.2015 14:55:08] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[05.03.2015 14:55:08] Exception in send_mail: file:views.py line:211
[05.03.2015 14:55:52] bill=11, spis=[290]
[05.03.2015 14:55:52] ***********************************************************************************************************
[05.03.2015 14:55:52] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 14:55:52] --------------------- start operation with zakaz = 290 --------------
[05.03.2015 14:55:52] 4
[05.03.2015 14:55:52] 5
[05.03.2015 14:55:52] 7
[05.03.2015 14:55:52] 8
[05.03.2015 14:55:52] 11
[05.03.2015 14:55:52] 12
[05.03.2015 14:55:52] 13
[05.03.2015 14:55:52] ballance = 2832.00, cost=2466.58
[05.03.2015 14:55:52] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 14:55:52] write_off_of_money
[05.03.2015 14:55:52] Exception in write_off_of_money: 'ОШИБКА:  колонка "bonus_ballance" не существует
LINE 1: SELECT                    COALESCE(bonus_ballance, 0) FROM b...
                                           ^
QUERY:  SELECT                    COALESCE(bonus_ballance, 0) FROM billservice_account WHERE id=NEW.account_id
CONTEXT:  PL/pgSQL function account_transaction_trg_fn() line 12 at SQL-оператор
'
[05.03.2015 14:55:52] Exception in write_off_of_money: file:views.py line:1176
[05.03.2015 14:55:52] --------------------- end operation with zakaz = 290 --------------
[05.03.2015 14:55:52] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 14:55:52] ***********************************************************************************************************
[05.03.2015 14:55:52] ***********************************************************************************************************
[05.03.2015 14:55:52] --------------------- start operation for send message -------------
[05.03.2015 14:55:52] --------------------- end operation for send message -------------
[05.03.2015 14:55:52] ***********************************************************************************************************
[05.03.2015 15:02:32] bill=11, spis=[290]
[05.03.2015 15:02:32] ***********************************************************************************************************
[05.03.2015 15:02:32] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 15:02:32] --------------------- start operation with zakaz = 290 --------------
[05.03.2015 15:02:32] 4
[05.03.2015 15:02:32] 5
[05.03.2015 15:02:32] 7
[05.03.2015 15:02:32] 8
[05.03.2015 15:02:32] 11
[05.03.2015 15:02:32] 12
[05.03.2015 15:02:32] 13
[05.03.2015 15:02:32] ballance = 2832.00, cost=2466.58
[05.03.2015 15:02:32] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 15:02:32] write_off_of_money
[05.03.2015 15:02:32] Exception in write_off_of_money: 'ОШИБКА:  в записи "new" нет поля "prev_balance"
CONTEXT:  функция PL/pgSQL account_transaction_trg_fn(), строка 15, оператор присваивание
'
[05.03.2015 15:02:32] Exception in write_off_of_money: file:views.py line:1176
[05.03.2015 15:02:32] --------------------- end operation with zakaz = 290 --------------
[05.03.2015 15:02:32] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 15:02:32] ***********************************************************************************************************
[05.03.2015 15:02:32] ***********************************************************************************************************
[05.03.2015 15:02:32] --------------------- start operation for send message -------------
[05.03.2015 15:02:32] --------------------- end operation for send message -------------
[05.03.2015 15:02:32] ***********************************************************************************************************
[05.03.2015 15:17:27] utf-8
[05.03.2015 15:17:30] utf-8
[05.03.2015 15:18:03] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[05.03.2015 15:18:03] Exception in create_check: file:models.py line:587
[05.03.2015 15:18:03] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[05.03.2015 15:18:03] Exception in send_mail: file:views.py line:211
[05.03.2015 15:18:15] bill=11, spis=[295]
[05.03.2015 15:18:15] ***********************************************************************************************************
[05.03.2015 15:18:15] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 15:18:15] --------------------- start operation with zakaz = 295 --------------
[05.03.2015 15:18:15] 4
[05.03.2015 15:18:15] 5
[05.03.2015 15:18:15] 7
[05.03.2015 15:18:15] 8
[05.03.2015 15:18:15] 11
[05.03.2015 15:18:15] 12
[05.03.2015 15:18:15] 13
[05.03.2015 15:18:15] ballance = 2832.00, cost=2363.81
[05.03.2015 15:18:15] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 15:18:15] write_off_of_money
[05.03.2015 15:18:15] Exception in write_off_of_money: 'ОШИБКА:  в записи "new" нет поля "prev_balance"
CONTEXT:  функция PL/pgSQL account_transaction_trg_fn(), строка 15, оператор присваивание
'
[05.03.2015 15:18:15] Exception in write_off_of_money: file:views.py line:1176
[05.03.2015 15:18:15] --------------------- end operation with zakaz = 295 --------------
[05.03.2015 15:18:15] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 15:18:15] ***********************************************************************************************************
[05.03.2015 15:18:15] ***********************************************************************************************************
[05.03.2015 15:18:15] --------------------- start operation for send message -------------
[05.03.2015 15:18:15] --------------------- end operation for send message -------------
[05.03.2015 15:18:15] ***********************************************************************************************************
[05.03.2015 15:31:26] bill=11, spis=[295]
[05.03.2015 15:31:26] ***********************************************************************************************************
[05.03.2015 15:31:26] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 15:31:26] --------------------- start operation with zakaz = 295 --------------
[05.03.2015 15:31:26] 4
[05.03.2015 15:31:26] 5
[05.03.2015 15:31:26] 7
[05.03.2015 15:31:26] 8
[05.03.2015 15:31:26] 11
[05.03.2015 15:31:26] 12
[05.03.2015 15:31:26] 13
[05.03.2015 15:31:26] ballance = 2832.00, cost=2363.81
[05.03.2015 15:31:26] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 15:31:26] write_off_of_money
[05.03.2015 15:31:26] Exception in write_off_of_money: 'ОШИБКА:  функция trs_crt_pdb(date) не существует
LINE 1: SELECT trs_crt_pdb(NEW.created::date)
               ^
HINT:  Функция с данными именем и типами аргументов не найдена. Возможно, вам следует добавить явные преобразования типов.
QUERY:  SELECT trs_crt_pdb(NEW.created::date)
CONTEXT:  PL/pgSQL function trs_ins_trg_fn() line 13 at PERFORM
'
[05.03.2015 15:31:26] Exception in write_off_of_money: file:views.py line:1176
[05.03.2015 15:31:26] --------------------- end operation with zakaz = 295 --------------
[05.03.2015 15:31:26] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 15:31:26] ***********************************************************************************************************
[05.03.2015 15:31:26] ***********************************************************************************************************
[05.03.2015 15:31:26] --------------------- start operation for send message -------------
[05.03.2015 15:31:26] --------------------- end operation for send message -------------
[05.03.2015 15:31:26] ***********************************************************************************************************
[05.03.2015 15:40:56] bill=11, spis=[295]
[05.03.2015 15:40:56] ***********************************************************************************************************
[05.03.2015 15:40:56] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 15:40:56] --------------------- start operation with zakaz = 295 --------------
[05.03.2015 15:40:56] 4
[05.03.2015 15:40:56] 5
[05.03.2015 15:40:56] 7
[05.03.2015 15:40:56] 8
[05.03.2015 15:40:56] 11
[05.03.2015 15:40:56] 12
[05.03.2015 15:40:56] 13
[05.03.2015 15:40:56] ballance = 2832.00, cost=2363.81
[05.03.2015 15:40:56] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 15:40:56] write_off_of_money
[05.03.2015 15:40:56] Exception in write_off_of_money: 'ОШИБКА:  функция trs_crt_pdb(date) не существует
LINE 1: SELECT trs_crt_pdb(NEW.created::date)
               ^
HINT:  Функция с данными именем и типами аргументов не найдена. Возможно, вам следует добавить явные преобразования типов.
QUERY:  SELECT trs_crt_pdb(NEW.created::date)
CONTEXT:  PL/pgSQL function trs_ins_trg_fn() line 13 at PERFORM
'
[05.03.2015 15:40:56] Exception in write_off_of_money: file:views.py line:1176
[05.03.2015 15:40:56] --------------------- end operation with zakaz = 295 --------------
[05.03.2015 15:40:56] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 15:40:56] ***********************************************************************************************************
[05.03.2015 15:40:56] ***********************************************************************************************************
[05.03.2015 15:40:56] --------------------- start operation for send message -------------
[05.03.2015 15:40:56] --------------------- end operation for send message -------------
[05.03.2015 15:40:56] ***********************************************************************************************************
[05.03.2015 15:59:01] bill=11, spis=[295]
[05.03.2015 15:59:01] ***********************************************************************************************************
[05.03.2015 15:59:01] --------------------- start operation write off of money for bill_account = 11 -------------
[05.03.2015 15:59:01] --------------------- start operation with zakaz = 295 --------------
[05.03.2015 15:59:01] 4
[05.03.2015 15:59:01] 5
[05.03.2015 15:59:01] 7
[05.03.2015 15:59:01] 8
[05.03.2015 15:59:01] 11
[05.03.2015 15:59:01] 12
[05.03.2015 15:59:01] 13
[05.03.2015 15:59:01] ballance = 2832.00, cost=2363.81
[05.03.2015 15:59:01] ballance = <class 'decimal.Decimal'>, cost=<type 'float'>
[05.03.2015 15:59:01] write_off_of_money
[05.03.2015 15:59:02] --------------------- end operation with zakaz = 295 --------------
[05.03.2015 15:59:02] --------------------- end operation write off of money for bill_account = 11 -------------
[05.03.2015 15:59:02] ***********************************************************************************************************
[05.03.2015 15:59:02] ***********************************************************************************************************
[05.03.2015 15:59:02] --------------------- start operation for send message -------------
[05.03.2015 15:59:02] --------------------- end operation for send message -------------
[05.03.2015 15:59:02] ***********************************************************************************************************
[06.03.2015 11:35:20] utf-8
[06.03.2015 11:35:26] utf-8
[06.03.2015 11:37:10] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[06.03.2015 11:37:10] Exception in create_check: file:models.py line:587
[06.03.2015 11:37:10] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[06.03.2015 11:37:10] Exception in send_mail: file:views.py line:211
[06.03.2015 11:42:26] utf-8
[06.03.2015 11:42:29] utf-8
[06.03.2015 11:42:47] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[06.03.2015 11:42:47] Exception in create_check: file:models.py line:587
[06.03.2015 11:42:48] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[06.03.2015 11:42:48] Exception in send_mail: file:views.py line:211
[06.03.2015 11:46:50] utf-8
[06.03.2015 11:46:54] utf-8
[06.03.2015 11:47:07] Exception in create_check: 'FinDocTemplate matching query does not exist.'
[06.03.2015 11:47:07] Exception in create_check: file:models.py line:587
[06.03.2015 11:47:07] Exception in send_mail: '{'': (501, '5.1.3 Bad recipient address syntax')}'
[06.03.2015 11:47:07] Exception in send_mail: file:views.py line:211
[06.03.2015 12:48:25] exception when saving log...
[06.03.2015 12:48:41] exception when saving log...
[06.03.2015 14:45:52] exception when saving log...
[06.03.2015 16:11:16] exception when saving log...
[06.03.2015 16:11:26] exception when saving log...
[06.03.2015 16:30:08] payment_wm_start Except: 'Settings' object has no attribute 'BILLING_DB'
[13.03.2015 16:34:23] exception when saving log...
[13.03.2015 16:36:17] exception when saving log...
[13.03.2015 16:37:45] exception when saving log...
[13.03.2015 16:39:09] exception when saving log...
[13.03.2015 16:39:25] exception when saving log...
[13.03.2015 16:41:13] exception when saving log...
[13.03.2015 16:43:38] exception when saving log...
[13.03.2015 16:44:02] exception when saving log...
[13.03.2015 16:44:24] exception when saving log...
[13.03.2015 16:45:48] utf-8
[13.03.2015 16:46:03] utf-8
[16.03.2015 16:11:59] utf-8
[16.03.2015 16:12:09] utf-8
[16.03.2015 16:43:29] utf-8
[16.03.2015 16:43:31] utf-8
[19.03.2015 15:44:42] payment_wm_start Except: 'Settings' object has no attribute 'BILLING_DB'
[19.03.2015 15:46:54] payment_wm_start Except: 'Settings' object has no attribute 'BILLING_DB'
[19.03.2015 15:48:18] payment_wm_start Except: 'Settings' object has no attribute 'BILLING_DB'
[19.03.2015 15:49:35] payment_wm_start Except: 'Settings' object has no attribute 'BILLING_DB'
[20.03.2015 12:45:44] utf-8
[20.03.2015 12:45:49] utf-8
[24.03.2015 13:17:12] utf-8
[24.03.2015 13:17:16] utf-8
[26.03.2015 13:43:49] utf-8
[26.03.2015 13:44:01] utf-8
